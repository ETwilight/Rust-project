warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 1.03s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(33554433), interests=READABLE | WRITABLE
Shield:
   >> Permissions-Policy: interest-cohort=()
   >> X-Content-Type-Options: nosniff
   >> X-Frame-Options: SAMEORIGIN
Rocket has launched from http://127.0.0.1:8000
registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >>    >> Outcome: Success
Outcome: Success
Warning: Received SIGINT. Requesting shutdown.
   >> Response succeeded.
   >> Response succeeded.
Shutdown requested. Waiting for pending I/O...
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
Graceful shutdown completed successfully.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.96s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(16777217), interests=READABLE | WRITABLE
Shield:
   >> Permissions-Policy: interest-cohort=()
   >> X-Frame-Options: SAMEORIGIN
   >> X-Content-Type-Options: nosniff
Rocket has launched from http://127.0.0.1:8000
registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Matched: (event_player_info) GET /playerInfo/event
   >> Outcome: Success
Get event   >> Outcome: Success
Warning: Received SIGINT. Requesting shutdown.
   >> Response succeeded.
Shutdown requested. Waiting for pending I/O...
deregistering event source from poller
deregistering event source from poller
   >> Response succeeded.
deregistering event source from poller
Graceful shutdown completed successfully.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.74s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(16777217), interests=READABLE | WRITABLE
Shield:
   >> X-Content-Type-Options: nosniff
   >> X-Frame-Options: SAMEORIGIN
   >> Permissions-Policy: interest-cohort=()
Rocket has launched from http://127.0.0.1:8000
Warning: Received SIGINT. Requesting shutdown.
Shutdown requested. Waiting for pending I/O...
deregistering event source from poller
Graceful shutdown completed successfully.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8002 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.25s
     Running `target/debug/rust_kill 8003 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.24s
     Running `target/debug/rust_kill 8004 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8005 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.69s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
Shield:
   >> X-Frame-Options: SAMEORIGIN
   >> X-Content-Type-Options: nosniff
   >> Permissions-Policy: interest-cohort=()
Rocket has launched from http://127.0.0.1:8000
Warning: Received SIGINT. Requesting shutdown.
Shutdown requested. Waiting for pending I/O...
deregistering event source from poller
Graceful shutdown completed successfully.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8002 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8003 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8004 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8005 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.75s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(16777217), interests=READABLE | WRITABLE
Shield:
   >> X-Content-Type-Options: nosniff
   >> Permissions-Policy: interest-cohort=()
   >> X-Frame-Options: SAMEORIGIN
Rocket has launched from http://127.0.0.1:8000
Warning: Received SIGINT. Requesting shutdown.
Shutdown requested. Waiting for pending I/O...
deregistering event source from poller
Graceful shutdown completed successfully.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.26s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8002 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8003 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8004 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.29s
     Running `target/debug/rust_kill 8005 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.48s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(16777217), interests=READABLE | WRITABLE
Shield:
   >> X-Content-Type-Options: nosniff
   >> Permissions-Policy: interest-cohort=()
   >> X-Frame-Options: SAMEORIGIN
Rocket has launched from http://127.0.0.1:8000
registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
Warning: Received SIGINT. Requesting shutdown.
Shutdown requested. Waiting for pending I/O...
deregistering event source from poller
   >> Response succeeded.
deregistering event source from poller
   >> Response succeeded.
deregistering event source from poller
Graceful shutdown completed successfully.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8002 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8003 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8004 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8005 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.69s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
Shield:
   >> X-Content-Type-Options: nosniff
   >> X-Frame-Options: SAMEORIGIN
   >> Permissions-Policy: interest-cohort=()
Rocket has launched from http://127.0.0.1:8000
Warning: Received SIGINT. Requesting shutdown.
Shutdown requested. Waiting for pending I/O...
deregistering event source from poller
Graceful shutdown completed successfully.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.24s
     Running `target/debug/rust_kill 8002 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8003 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8004 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.25s
     Running `target/debug/rust_kill 8005 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.62s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
Shield:
   >> Permissions-Policy: interest-cohort=()
   >> X-Frame-Options: SAMEORIGIN
   >> X-Content-Type-Options: nosniff
Rocket has launched from http://127.0.0.1:8000
Warning: Received SIGINT. Requesting shutdown.
Shutdown requested. Waiting for pending I/O...
deregistering event source from poller
Graceful shutdown completed successfully.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.24s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8002 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8003 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.24s
     Running `target/debug/rust_kill 8004 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8005 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.71s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
Shield:
   >> X-Content-Type-Options: nosniff
   >> X-Frame-Options: SAMEORIGIN
   >> Permissions-Policy: interest-cohort=()
Rocket has launched from http://127.0.0.1:8000
Warning: Received SIGINT. Requesting shutdown.
Shutdown requested. Waiting for pending I/O...
deregistering event source from poller
Graceful shutdown completed successfully.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.18s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(33554433), interests=READABLE | WRITABLE
Shield:
   >> Permissions-Policy: interest-cohort=()
   >> X-Frame-Options: SAMEORIGIN
   >> X-Content-Type-Options: nosniff
Rocket has launched from http://127.0.0.1:8000
registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
GET /index.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
GET /Menu.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(5), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(6), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/blood-cement-wall-concrete-surface-texture-background-copy-space_51524-11509.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
Warning: Received SIGINT. Requesting shutdown.
   >> Response succeeded.
Shutdown requested. Waiting for pending I/O...
deregistering event source from poller
deregistering event source from poller
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
Graceful shutdown completed successfully.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.83s
     Running `target/debug/rust_kill 8000 true`
SERVER STARTS
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":0}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":0}
Successfully connect to room: rust_kill 
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8000
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
Shield:
   >> X-Frame-Options: SAMEORIGIN
   >> X-Content-Type-Options: nosniff
   >> Permissions-Policy: interest-cohort=()
Rocket has launched from http://127.0.0.1:8000
registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
GET /message/event text/event-stream:
GET /playerInfo/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Matched: (event_player_info) GET /playerInfo/event
   >> Outcome: Success
Get event   >> Outcome: Success
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.82s
     Running `target/debug/rust_kill 8001 false`
registering event source with poller: token=Token(5), interests=READABLE | WRITABLE
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
deregistering event source from poller
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":1}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":1}
Successfully connect to room: rust_kill 
registering event source with poller: token=Token(16777221), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(33554437), interests=READABLE | WRITABLE
registering event source with poller: token=Token(6), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8001
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(16777217), interests=READABLE | WRITABLE
Shield:
   >> Permissions-Policy: interest-cohort=()
   >> X-Frame-Options: SAMEORIGIN
   >> X-Content-Type-Options: nosniff
Rocket has launched from http://127.0.0.1:8001
registering event source with poller: token=Token(2), interests=READABLE | WRITABLE
GET /index.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
registering event source with poller: token=Token(5), interests=READABLE | WRITABLE
GET /Menu.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(6), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
registering event source with poller: token=Token(7), interests=READABLE | WRITABLE
GET /images/blood-cement-wall-concrete-surface-texture-background-copy-space_51524-11509.jpg:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/blood-cement-wall-concrete-surface-texture-background-copy-space_51524-11509.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /favicon.ico image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response was `None`.
   >> Outcome: Forward
   >> No matching routes for GET /favicon.ico image/avif.
   >> No 404 catcher registered. Using Rocket default.
   >> Response succeeded.
thread 'thread 'rocket-worker-threadrocket-worker-thread' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', src/./game/utils.rs:53:26
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
', src/./game/utils.rs:53:26
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.89s
     Running `target/debug/rust_kill 8002 false`
registering event source with poller: token=Token(16777222), interests=READABLE | WRITABLE
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
deregistering event source from poller
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":2}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":2}
Successfully connect to room: rust_kill 
registering event source with poller: token=Token(33554438), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(50331654), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331653), interests=READABLE | WRITABLE
registering event source with poller: token=Token(8), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(67108869), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8002
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(16777217), interests=READABLE | WRITABLE
Shield:
   >> Permissions-Policy: interest-cohort=()
   >> X-Content-Type-Options: nosniff
   >> X-Frame-Options: SAMEORIGIN
Rocket has launched from http://127.0.0.1:8002
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8003 false`
registering event source with poller: token=Token(83886085), interests=READABLE | WRITABLE
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
deregistering event source from poller
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":3}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":3}
Successfully connect to room: rust_kill 
registering event source with poller: token=Token(100663301), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(117440517), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108870), interests=READABLE | WRITABLE
registering event source with poller: token=Token(16777224), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(83886086), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663302), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8003
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(16777217), interests=READABLE | WRITABLE
Shield:
   >> X-Content-Type-Options: nosniff
   >> X-Frame-Options: SAMEORIGIN
   >> Permissions-Policy: interest-cohort=()
Rocket has launched from http://127.0.0.1:8003
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.23s
     Running `target/debug/rust_kill 8004 false`
registering event source with poller: token=Token(117440518), interests=READABLE | WRITABLE
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
deregistering event source from poller
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":4}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":4}
Successfully connect to room: rust_kill 
registering event source with poller: token=Token(134217734), interests=READABLE | WRITABLE
registering event source with poller: token=Token(134217733), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(150994949), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554440), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(167772165), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(16777218), interests=READABLE | WRITABLE
registering event source with poller: token=Token(184549381), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326597), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8004
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(16777217), interests=READABLE | WRITABLE
Shield:
   >> Permissions-Policy: interest-cohort=()
   >> X-Frame-Options: SAMEORIGIN
   >> X-Content-Type-Options: nosniff
Rocket has launched from http://127.0.0.1:8004
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', src/./game/utils.rs:53:26
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', src/./game/utils.rs:53:26
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', src/./game/utils.rs:53:26
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
thread 'rocket-worker-thread' panicked at 'thread 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })thread '', rocket-worker-threadsrc/./game/utils.rsrocket-worker-thread:' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', 53' panicked at ':src/./game/utils.rscalled `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } }):26', 53
:src/./game/utils.rs26:53:
26
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', src/./game/utils.rs:53:26
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.22s
     Running `target/debug/rust_kill 8005 false`
registering event source with poller: token=Token(218103813), interests=READABLE | WRITABLE
Get Registration from Client : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
deregistering event source from poller
client get : {"user_info":{"username":"Howdy","serverip":""},"ip":"127.0.0.1","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":7}
deregistering event source from poller
client get : {"room":{"room_name":"rust_kill","players":[{"user_info":{"username":"Howdy","serverip":""},"ip":"172.20.10.2","role":"Undecided","state":{"is_turn":false,"is_muted":false,"is_speaking":false,"is_alive":false},"id":5}],"messages":[],"game_state":{"turn":"StartTurn","win_type":"Undecided","vote_map":{},"kill_vote_map":{},"reveal_result":{"id":0,"is_good":false}}},"ts":"StartTurn","idx":5}
registering event source with poller: token=Token(16777216), interests=READABLE | WRITABLE
Successfully connect to room: rust_kill 
registering event source with poller: token=Token(234881029), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(251658245), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(50331656), interests=READABLE | WRITABLE
registering event source with poller: token=Token(268435461), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(285212677), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(16777218), interests=READABLE | WRITABLE
registering event source with poller: token=Token(301989893), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2), interests=READABLE | WRITABLE
registering event source with poller: token=Token(318767109), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
Configured for debug.
   >> address: 127.0.0.1
   >> port: 8005
   >> workers: 8
   >> ident: Rocket
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, string = 8KiB
   >> temp dir: /var/folders/xl/wkxk5t8j3flcht9pt3jry2nc0000gn/T/
   >> http/2: true
   >> keep-alive: 5s
   >> tls: disabled
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
   >> log level: debug
   >> cli colors: true
Routes:
   >> (FileServer: static) GET /<path..> [10]
   >> (post_player_info) POST /playerInfo
   >> (event_room) GET /event/room
   >> (post_message) POST /room/message
   >> (events) GET /message/event
   >> (event_player_info) GET /playerInfo/event
Fairings:
   >> Shield (liftoff, response, singleton)
registering event source with poller: token=Token(16777217), interests=READABLE | WRITABLE
Shield:
   >> X-Content-Type-Options: nosniff
   >> Permissions-Policy: interest-cohort=()
   >> X-Frame-Options: SAMEORIGIN
Rocket has launched from http://127.0.0.1:8005
ROOM IS FULFILLED!registering event source with poller: token=Token(335544325), interests=READABLE | WRITABLE
thread 'thread 'rocket-worker-threadthread '' panicked at 'rocket-worker-threadthread 'thread 'rocket-worker-threadrocket-worker-thread' panicked at 'rocket-worker-thread' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', ' panicked at 'src/./game/utils.rscalled `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', src/./game/utils.rs:53:26
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "127.0.0.1", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 7 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', src/./game/utils.rs::53:26
', 53src/./game/utils.rssrc/./game/utils.rs::53::26
5326
:26
thread 'thread 'rocket-worker-threadrocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 5 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', thread '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 5 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })', rocket-worker-threadsrc/./game/utils.rssrc/./game/utils.rs:' panicked at 'thread '53::thread 'called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 5 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })thread '53', rocket-worker-thread26rocket-worker-threadrocket-worker-thread
:' panicked at '' panicked at '26called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 5 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })' panicked at '
src/./game/utils.rs', :src/./game/utils.rscalled `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 5 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } })53:called `Result::unwrap()` on an `Err` value: SendError(Room { room_name: "", players: [Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 0 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 1 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 2 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 3 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 4 }, Player { user_info: UserInfo { username: "Howdy", serverip: "" }, ip: "172.20.10.2", role: Undecided, state: PlayerState { is_turn: false, is_muted: false, is_speaking: false, is_alive: false }, id: 5 }], messages: [], game_state: GameState { turn: StartTurn, win_type: Undecided, vote_map: {}, kill_vote_map: {}, reveal_result: RevealResult { id: 0, is_good: false } } }):', 2653', 
src/./game/utils.rs:src/./game/utils.rs26:
:5353:26
:26
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
registering event source with poller: token=Token(33554432), interests=READABLE | WRITABLE
GET /index.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(150994950), interests=READABLE | WRITABLE
registering event source with poller: token=Token(7), interests=READABLE | WRITABLE
registering event source with poller: token=Token(8), interests=READABLE | WRITABLE
GET /Menu.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/blood-cement-wall-concrete-surface-texture-background-copy-space_51524-11509.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "a")
   >> url-encoded field: ("serverip", "a")
GET /Room.html?username=a&serverip=a text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(50331648), interests=READABLE | WRITABLE
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "b")
   >> url-encoded field: ("serverip", "b")
GET /Room.html?username=b&serverip=b text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(16777218), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108872), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "a")
   >> url-encoded field: ("message", "a+send+to+b")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "a", message: "a send to b" }registering event source with poller: token=Token(9), interests=READABLE | WRITABLE
registering event source with poller: token=Token(10), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"a\",\"message\":\"a send to b\",\"visible_type\":\"All\"}")   >> Outcome: Success
{"room_name":"rustkill","username":"a","message":"a send to b","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(16777225), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(33554441), interests=READABLE | WRITABLE
registering event source with poller: token=Token(11), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(9), interests=READABLE | WRITABLE
registering event source with poller: token=Token(16777227), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(50331650), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(33554443), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "a send to b", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331659), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "a send to b", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(16777218), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108875), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "a send to b", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "a send to b", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "a")
   >> url-encoded field: ("message", "b+send+to+a")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "a", message: "b send to a" }registering event source with poller: token=Token(16777226), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886091), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"a\",\"message\":\"b send to a\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"a","message":"b send to a","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(33554442), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331657), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(50331658), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(16777225), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108874), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(67108866), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886090), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(100663306), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331650), interests=READABLE | WRITABLE
thread 'deregistering event source from poller
registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(117440522), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "b send to a", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "b send to a", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(16777218), interests=READABLE | WRITABLE
24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "b send to a", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:25:
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "b send to a", visible_type: All })', src/./game/utils.rs:24:25
24:25
registering event source with poller: token=Token(83886082), interests=READABLE | WRITABLE
GET /index.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
GET /Menu.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(5), interests=READABLE | WRITABLE
registering event source with poller: token=Token(6), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
registering event source with poller: token=Token(7), interests=READABLE | WRITABLE
GET /images/blood-cement-wall-concrete-surface-texture-background-copy-space_51524-11509.jpg:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/blood-cement-wall-concrete-surface-texture-background-copy-space_51524-11509.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /favicon.ico image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response was `None`.
   >> Outcome: Forward
   >> No matching routes for GET /favicon.ico image/avif.
   >> No 404 catcher registered. Using Rocket default.
   >> Response succeeded.
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Outcome: Success
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "c")
   >> url-encoded field: ("serverip", "c")
GET /Room.html?username=c&serverip=c text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(16777221), interests=READABLE | WRITABLE
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(8), interests=READABLE | WRITABLE
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
Get event   >>    >> Outcome: Success
Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "c")
   >> url-encoded field: ("message", "c+send+to+a+and+b")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "c", message: "c send to a and b" }registering event source with poller: token=Token(9), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663307), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"c\",\"message\":\"c send to a and b\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"c","message":"c send to a and b","visible_type":"All"}
registering event source with poller: token=Token(134217738), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108873), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(150994954), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554441), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(167772170), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(16777225), interests=READABLE | WRITABLE
registering event source with poller: token=Token(184549386), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(67108866), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326602), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(50331650), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "c", message: "c send to a and b", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "c", message: "c send to a and b", visible_type: All })', src/./game/utils.rs:24:25

registering event source with poller: token=Token(218103818), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "c", message: "c send to a and b", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(83886082), interests=READABLE | WRITABLE
GET / text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Menu.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
registering event source with poller: token=Token(5), interests=READABLE | WRITABLE
GET /jquery.js:
GET /nicepage.js:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
registering event source with poller: token=Token(6), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/blood-cement-wall-concrete-surface-texture-background-copy-space_51524-11509.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /favicon.ico image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response was `None`.
   >> Outcome: Forward
   >> No matching routes for GET /favicon.ico image/avif.
   >> No 404 catcher registered. Using Rocket default.
   >> Response succeeded.
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
registering event source with poller: token=Token(7), interests=READABLE | WRITABLE
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "d")
   >> url-encoded field: ("serverip", "d")
GET /Room.html?username=d&serverip=d text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(16777221), interests=READABLE | WRITABLE
registering event source with poller: token=Token(8), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "d")
   >> url-encoded field: ("message", "d+send+to+a+b+and+c")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "d", message: "d send to a b and c" }registering event source with poller: token=Token(9), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(117440523), interests=READABLE | WRITABLE
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"d\",\"message\":\"d send to a b and c\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"d","message":"d send to a b and c","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(234881034), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(251658250), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886089), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331657), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(268435466), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(33554441), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(285212682), interests=READABLE | WRITABLE
registering event source with poller: token=Token(16777225), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(301989898), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(67108866), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(318767114), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "d", message: "d send to a b and c", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(50331650), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "d", message: "d send to a b and c", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "a")
   >> url-encoded field: ("message", "l")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "a", message: "l" }registering event source with poller: token=Token(134217739), interests=READABLE | WRITABLE
registering event source with poller: token=Token(335544330), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"a\",\"message\":\"l\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"a","message":"l","visible_type":"All"}
registering event source with poller: token=Token(150994955), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(167772171), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663305), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108873), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(184549387), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331657), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(201326603), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554441), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(218103819), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(83886082), interests=READABLE | WRITABLE
registering event source with poller: token=Token(234881035), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "l", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(67108866), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "l", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "a")
   >> url-encoded field: ("message", "l")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "a", message: "l" }registering event source with poller: token=Token(352321546), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(369098762), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"a\",\"message\":\"l\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"a","message":"l","visible_type":"All"}
registering event source with poller: token=Token(251658251), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(268435467), interests=READABLE | WRITABLE
registering event source with poller: token=Token(117440521), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(83886089), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(285212683), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(67108873), interests=READABLE | WRITABLE
registering event source with poller: token=Token(301989899), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(50331657), interests=READABLE | WRITABLE
registering event source with poller: token=Token(318767115), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(100663298), interests=READABLE | WRITABLE
registering event source with poller: token=Token(335544331), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "l", visible_type: All })deregistering event source from poller
', deregistering event source from poller
registering event source with poller: token=Token(83886082), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "l", visible_type: All })', src/./game/utils.rs:24:25
src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "a")
   >> url-encoded field: ("message", "l")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "a", message: "l" }registering event source with poller: token=Token(385875978), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321547), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"a\",\"message\":\"l\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"a","message":"l","visible_type":"All"}
registering event source with poller: token=Token(402653194), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(134217737), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(419430410), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(100663305), interests=READABLE | WRITABLE
registering event source with poller: token=Token(436207626), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(83886089), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(452984842), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(469762058), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(67108873), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(117440514), interests=READABLE | WRITABLE
registering event source with poller: token=Token(486539274), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "l", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(100663298), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "l", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "a")
   >> url-encoded field: ("message", "l")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "a", message: "l" }registering event source with poller: token=Token(369098763), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(385875979), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"a\",\"message\":\"l\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"a","message":"l","visible_type":"All"}
registering event source with poller: token=Token(503316490), interests=READABLE | WRITABLE
registering event source with poller: token=Token(150994953), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(520093706), interests=READABLE | WRITABLE
registering event source with poller: token=Token(117440521), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(536870922), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(100663305), interests=READABLE | WRITABLE
registering event source with poller: token=Token(553648138), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(570425354), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886089), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(134217730), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(587202570), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "l", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(117440514), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "l", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "a")
   >> url-encoded field: ("message", "l")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "a", message: "l" }registering event source with poller: token=Token(402653195), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(419430411), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"a\",\"message\":\"l\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"a","message":"l","visible_type":"All"}
registering event source with poller: token=Token(603979786), interests=READABLE | WRITABLE
registering event source with poller: token=Token(167772169), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(620757002), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(134217737), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534218), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(117440521), interests=READABLE | WRITABLE
registering event source with poller: token=Token(654311434), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(100663305), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(671088650), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(687865866), interests=READABLE | WRITABLE
registering event source with poller: token=Token(150994946), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(134217730), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "l", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "l", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "a")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "a", message: "h" }registering event source with poller: token=Token(436207627), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(452984843), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"a\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"a","message":"h","visible_type":"All"}
registering event source with poller: token=Token(704643082), interests=READABLE | WRITABLE
registering event source with poller: token=Token(184549385), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(721420298), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(150994953), interests=READABLE | WRITABLE
registering event source with poller: token=Token(738197514), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(134217737), interests=READABLE | WRITABLE
registering event source with poller: token=Token(754974730), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(117440521), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(771751946), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(167772162), interests=READABLE | WRITABLE
registering event source with poller: token=Token(788529162), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "h", visible_type: All })', registering event source with poller: token=Token(150994946), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "a")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "a", message: "h" }registering event source with poller: token=Token(469762059), interests=READABLE | WRITABLE
registering event source with poller: token=Token(805306378), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"a\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"a","message":"h","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(486539275), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(201326601), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(503316491), interests=READABLE | WRITABLE
registering event source with poller: token=Token(167772169), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(520093707), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(150994953), interests=READABLE | WRITABLE
registering event source with poller: token=Token(536870923), interests=READABLE | WRITABLE
registering event source with poller: token=Token(134217737), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(553648139), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(184549378), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425355), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(167772162), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "a", message: "h", visible_type: All })', src/./game/utils.rs:24:25
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(67108864), interests=READABLE | WRITABLE
registering event source with poller: token=Token(16777223), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
   >>    >> Remote left: channel closed.
Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(33554437), interests=READABLE | WRITABLE
registering event source with poller: token=Token(16777220), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(16777219), interests=READABLE | WRITABLE
registering event source with poller: token=Token(822083594), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(33554435), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
   >> Remote left: channel closed.
deregistering event source from poller
   >> Remote left: channel closed.
registering event source with poller: token=Token(50331651), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(16777219), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:deregistering event source from poller
registering event source with poller: token=Token(67108867), interests=READABLE | WRITABLE
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(50331653), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(83886083), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(201326594), interests=READABLE | WRITABLE
   >> Remote left: channel closed.
registering event source with poller: token=Token(100663299), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(184549378), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "a")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "a" }registering event source with poller: token=Token(67108869), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
registering event source with poller: token=Token(33554436), interests=READABLE | WRITABLE
   >> Response succeeded.
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"a\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"a","visible_type":"All"}
registering event source with poller: token=Token(117440515), interests=READABLE | WRITABLE
registering event source with poller: token=Token(838860810), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(134217731), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(50331650), interests=READABLE | WRITABLE
registering event source with poller: token=Token(150994947), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(33554435), interests=READABLE | WRITABLE
:25registering event source with poller: token=Token(167772163), interests=READABLE | WRITABLE

deregistering event source from poller
registering event source with poller: token=Token(83886085), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(184549379), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24deregistering event source from poller
:registering event source with poller: token=Token(218103810), interests=READABLE | WRITABLE
25
registering event source with poller: token=Token(201326595), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', deregistering event source from poller
registering event source with poller: token=Token(201326594), interests=READABLE | WRITABLE
deregistering event source from poller
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "weg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "weg" }registering event source with poller: token=Token(100663301), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(50331652), interests=READABLE | WRITABLE
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"weg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"weg","visible_type":"All"}
registering event source with poller: token=Token(218103811), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(855638026), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(234881027), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rsderegistering event source from poller
registering event source with poller: token=Token(67108866), interests=READABLE | WRITABLE
:24:registering event source with poller: token=Token(251658243), interests=READABLE | WRITABLE
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
registering event source with poller: token=Token(50331651), interests=READABLE | WRITABLE
registering event source with poller: token=Token(268435459), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })registering event source with poller: token=Token(117440517), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(285212675), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(234881026), interests=READABLE | WRITABLE
registering event source with poller: token=Token(301989891), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadderegistering event source from poller
registering event source with poller: token=Token(218103810), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(134217733), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(16777220), interests=READABLE | WRITABLE
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
GET /style.css text/css:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.18s
     Running `target/debug/rust_kill`
thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', src/main.rs:158:41
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
   >>    >> Remote left: channel closed.
Remote left: channel closed.
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.18s
     Running `target/debug/rust_kill 8001 false`
registering event source with poller: token=Token(67108868), interests=READABLE | WRITABLE
Get results:("REG", "{\"user_info\":{\"username\":\"Howdy\",\"serverip\":\"\"},\"ip\":\"127.0.0.1\",\"role\":\"Undecided\",\"state\":{\"is_turn\":false,\"is_muted\":false,\"is_speaking\":false,\"is_alive\":false},\"id\":7}")deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
GET /index.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Menu.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/blood-cement-wall-concrete-surface-texture-background-copy-space_51524-11509.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "yichen32%40illino")
   >> url-encoded field: ("serverip", "aweg")
GET /Room.html?username=yichen32%40illino&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(83886080), interests=READABLE | WRITABLE
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(83886084), interests=READABLE | WRITABLE
registering event source with poller: token=Token(318767107), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /Room.js:
GET /jquery.js:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Outcome: Success
   >> Response succeeded.
Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "yichen32%40illino")
   >> url-encoded field: ("message", "awgwg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "yichen32@illino", message: "awgwg" }registering event source with poller: token=Token(872415242), interests=READABLE | WRITABLE
registering event source with poller: token=Token(587202571), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"yichen32@illino\",\"message\":\"awgwg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"yichen32@illino","message":"awgwg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(889192458), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(218103817), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(234881033), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(83886088), interests=READABLE | WRITABLE
registering event source with poller: token=Token(251658249), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "yichen32@illino", message: "awgwg", visible_type: All })', registering event source with poller: token=Token(268435465), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
registering event source with poller: token=Token(67108867), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(285212681), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "yichen32@illino", message: "awgwg", visible_type: All })', registering event source with poller: token=Token(16777222), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
registering event source with poller: token=Token(251658242), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "yichen32@illino", message: "awgwg", visible_type: All })', src/./game/utils.rs:thread '24:rocket-worker-threadregistering event source with poller: token=Token(301989897), interests=READABLE | WRITABLE
25' panicked at '
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "yichen32@illino", message: "awgwg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(234881026), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "yichen32@illino", message: "awgwg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "yichen32%40illino")
   >> url-encoded field: ("message", "awg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "yichen32@illino", message: "awg" }registering event source with poller: token=Token(603979787), interests=READABLE | WRITABLE
registering event source with poller: token=Token(318767113), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"yichen32@illino\",\"message\":\"awg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"yichen32@illino","message":"awg","visible_type":"All"}
registering event source with poller: token=Token(620757003), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(905969674), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(637534219), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(654311435), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663304), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "yichen32@illino", message: "awg", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(83886083), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(671088651), interests=READABLE | WRITABLE
deregistering event source from poller
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "yichen32@illino", message: "awg", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25registering event source with poller: token=Token(33554438), interests=READABLE | WRITABLE

deregistering event source from poller
registering event source with poller: token=Token(687865867), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "yichen32@illino", message: "awg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(704643083), interests=READABLE | WRITABLE
registering event source with poller: token=Token(268435458), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(251658242), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "yichen32@illino", message: "awg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "yichen32@illino", message: "awg", visible_type: All })', src/./game/utils.rs:24:25
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
GET /Room.html?username=yichen32%40illino&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >>    >> Outcome: Success
Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(100663300), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(167772166), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
thread 'rocket-worker-thread' panicked at 'receive error of client_response
', src/client.rs:47:23
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: JoinError::Panic(Id(9), ...)', src/client.rs:52:14
   >>    >> Remote left: channel closed.
Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(184549382), interests=READABLE | WRITABLE
GET /Room.html?username=yichen32%40illino&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(16777224), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(335544323), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554439), interests=READABLE | WRITABLE
GET /style.css text/css:
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(117440516), interests=READABLE | WRITABLE
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html?username=yichen32%40illino&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(100663296), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html?username=yichen32%40illino&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html?username=yichen32%40illino&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html?username=yichen32%40illino&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
registering event source with poller: token=Token(33554440), interests=READABLE | WRITABLE
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(134217732), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(50331655), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321539), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(50331656), interests=READABLE | WRITABLE
registering event source with poller: token=Token(369098755), interests=READABLE | WRITABLE
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
   >> Matched: (events) GET /message/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(385875971), interests=READABLE | WRITABLE
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(117440512), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(150994948), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108871), interests=READABLE | WRITABLE
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(67108872), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326598), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(402653187), interests=READABLE | WRITABLE
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(134217728), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(83886088), interests=READABLE | WRITABLE
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(83886087), interests=READABLE | WRITABLE
registering event source with poller: token=Token(419430403), interests=READABLE | WRITABLE
GET /nicepage.css text/css:
registering event source with poller: token=Token(218103814), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Outcome: Success
GET /reset.css text/css:
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
GET /script.js:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(150994944), interests=READABLE | WRITABLE
Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(167772164), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(184549380), interests=READABLE | WRITABLE
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(234881030), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(436207619), interests=READABLE | WRITABLE
registering event source with poller: token=Token(251658246), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >>    >> Response succeeded.
Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
   >> Matched: (events) GET /message/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(268435462), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
registering event source with poller: token=Token(100663304), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(452984835), interests=READABLE | WRITABLE
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(100663303), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326596), interests=READABLE | WRITABLE
   >> registering event source with poller: token=Token(117440520), interests=READABLE | WRITABLE
Outcome: Success
GET /Room.css text/css:
GET /style.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(285212678), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(167772160), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Outcome: Success
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
Get event   >> Outcome: Success
   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >>    >>    >> Outcome: Success
Response succeeded.
Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(134217736), interests=READABLE | WRITABLE
registering event source with poller: token=Token(469762051), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(150994952), interests=READABLE | WRITABLE
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(184549376), interests=READABLE | WRITABLE
registering event source with poller: token=Token(301989894), interests=READABLE | WRITABLE
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(117440519), interests=READABLE | WRITABLE
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(335544329), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwaeg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaeg" }registering event source with poller: token=Token(721420299), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwaeg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaeg" }registering event source with poller: token=Token(922746890), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwaegweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaegweg" }registering event source with poller: token=Token(12), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwaegwegaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaegwegaw" }registering event source with poller: token=Token(352321545), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(218103812), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(167772168), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
deregistering event source from poller
   >> url-encoded field: ("message", "awegwaegwegawegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaegwegawegaweg" }registering event source with poller: token=Token(486539267), interests=READABLE | WRITABLE
registering event source with poller: token=Token(13), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(184549384), interests=READABLE | WRITABLE
deregistering event source from poller
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
registering event source with poller: token=Token(234881028), interests=READABLE | WRITABLE
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwaegwegawegawegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaegwegawegawegaweg" }POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
registering event source with poller: token=Token(14), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwaegwegawegawegawegawega")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaegwegawegawegawegawega" }   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwaegwegawegawegawegawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaegwegawegawegawegawe" }registering event source with poller: token=Token(15), interests=READABLE | WRITABLE
registering event source with poller: token=Token(16), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(251658244), interests=READABLE | WRITABLE
deregistering event source from poller
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwaegwegawegawegawegawegawegawe")
registering event source with poller: token=Token(318767110), interests=READABLE | WRITABLE
deregistering event source from poller
   >> url-encoded field: ("visible_type", "All")
registering event source with poller: token=Token(268435460), interests=READABLE | WRITABLE
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaegwegawegawegawegawegawegawe" }registering event source with poller: token=Token(17), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
POST /room/message application/x-www-form-urlencoded:
   >> url-encoded field: ("message", "awegwaegwegawegawegawegawegawegawegawegawegawegawegawe")
   >> url-encoded field: ("visible_type", "All")
   >> Matched: (post_message) POST /room/message
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaegwegawegawegawegawegawegawegawegawegawegawegawe" }   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwaegwegawegawegawegawegawegawegawegawegaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwaegwegawegawegawegawegawegawegawegawegaw" }deregistering event source from poller
registering event source with poller: token=Token(134217735), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(335544326), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(503316483), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326592), interests=READABLE | WRITABLE
GET /Lobby.css text/css:
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(285212676), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Response succeeded.
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
deregistering event source from poller
   >> Handler post_message panicked.
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >>    >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
deregistering event source from poller
Remote left: client disconnect before response started.
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
   >> Remote left: client disconnect before response started.
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >>    >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >>    >> Remote left: client disconnect before response started.
Remote left: client disconnect before response started.
registering event source with poller: token=Token(352321542), interests=READABLE | WRITABLE
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(150994951), interests=READABLE | WRITABLE
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(16777233), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "awef")
   >> url-encoded field: ("serverip", "waeg")
GET /Room.html?username=awef&serverip=waeg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(167772167), interests=READABLE | WRITABLE
registering event source with poller: token=Token(16777232), interests=READABLE | WRITABLE
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(16777231), interests=READABLE | WRITABLE
registering event source with poller: token=Token(16777230), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "awef")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "awef", message: "aweg" }registering event source with poller: token=Token(16777229), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "awef")
   >> url-encoded field: ("message", "awegawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "awef", message: "awegawe" }registering event source with poller: token=Token(369098761), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "awef")
   >> url-encoded field: ("message", "awegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "awef", message: "awegaweg" }registering event source with poller: token=Token(301989892), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "awef")
   >> url-encoded field: ("message", "awegawegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "awef", message: "awegawegaweg" }registering event source with poller: token=Token(520093699), interests=READABLE | WRITABLE
   Compiling rust_kill v0.1.0 (/Users/generalcorn/Desktop/CS128 Honors/Rust-project-master/rust_kill)
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 8.15s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 49, kind: AddrNotAvailable, message: "Can't assign requested address" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.61s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 49, kind: AddrNotAvailable, message: "Can't assign requested address" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(33554447), interests=READABLE | WRITABLE
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(33554448), interests=READABLE | WRITABLE
GET /Lobby.css text/css:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
    Blocking waiting for file lock on build directory
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   Compiling rust_kill v0.1.0 (/Users/generalcorn/Desktop/CS128 Honors/Rust-project-master/rust_kill)
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(184549383), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554449), interests=READABLE | WRITABLE
   >> GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
registering event source with poller: token=Token(369098758), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Response succeeded.
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 7.30s
     Running `target/debug/rust_kill 8001 false`
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("serverip", "wef")
GET /Room.html?username=aef&serverip=wef text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(50331665), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554446), interests=READABLE | WRITABLE
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
registering event source with poller: token=Token(218103808), interests=READABLE | WRITABLE
Get results:("REG", "{\"user_info\":{\"username\":\"Howdy\",\"serverip\":\"\"},\"ip\":\"127.0.0.1\",\"role\":\"Undecided\",\"state\":{\"is_turn\":false,\"is_muted\":false,\"is_speaking\":false,\"is_alive\":false},\"id\":7}")deregistering event source from poller
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(234881024), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(251658240), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(16777228), interests=READABLE | WRITABLE
registering event source with poller: token=Token(939524106), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(33554444), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(50331660), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(67108876), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(83886092), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(100663308), interests=READABLE | WRITABLE
registering event source with poller: token=Token(285212674), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(16777223), interests=READABLE | WRITABLE
registering event source with poller: token=Token(117440520), interests=READABLE | WRITABLE
registering event source with poller: token=Token(268435458), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
thread 'registering event source with poller: token=Token(100663298), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "waeg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "waeg" }registering event source with poller: token=Token(268435456), interests=READABLE | WRITABLE
registering event source with poller: token=Token(117440524), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"waeg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"waeg","visible_type":"All"}
registering event source with poller: token=Token(285212672), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(956301322), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(301989888), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(134217736), interests=READABLE | WRITABLE
registering event source with poller: token=Token(318767104), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(33554439), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(335544320), interests=READABLE | WRITABLE
:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(352321536), interests=READABLE | WRITABLE
registering event source with poller: token=Token(117440514), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(301989890), interests=READABLE | WRITABLE
registering event source with poller: token=Token(369098752), interests=READABLE | WRITABLE
registering event source with poller: token=Token(285212674), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "waeg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "waeg" }registering event source with poller: token=Token(134217740), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875968), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"waeg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"waeg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(150994956), interests=READABLE | WRITABLE
registering event source with poller: token=Token(973078538), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(167772172), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(184549388), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(150994952), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326604), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331655), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', thread 'src/./game/utils.rsrocket-worker-thread:' panicked at '24called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All }):', 25src/./game/utils.rs
:deregistering event source from poller
registering event source with poller: token=Token(134217730), interests=READABLE | WRITABLE
24:registering event source with poller: token=Token(218103820), interests=READABLE | WRITABLE
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(318767106), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(234881036), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(301989890), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "LOOK+UR+ACTUALLY+ILL+MAN")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "LOOK UR ACTUALLY ILL MAN" }registering event source with poller: token=Token(402653184), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(419430400), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"LOOK UR ACTUALLY ILL MAN\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"LOOK UR ACTUALLY ILL MAN","visible_type":"All"}
registering event source with poller: token=Token(251658252), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(268435468), interests=READABLE | WRITABLE
registering event source with poller: token=Token(167772168), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "LOOK UR ACTUALLY ILL MAN", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(285212684), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855754), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108871), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "LOOK UR ACTUALLY ILL MAN", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(301989900), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(150994946), interests=READABLE | WRITABLE
registering event source with poller: token=Token(318767116), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(335544322), interests=READABLE | WRITABLE
registering event source with poller: token=Token(335544332), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "LOOK UR ACTUALLY ILL MAN", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(318767106), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "LOOK UR ACTUALLY ILL MAN", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "LOOK UR ACTUALLY ILL MAN", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "aweg" }registering event source with poller: token=Token(385875977), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(402653193), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(33554445), interests=READABLE | WRITABLE
registering event source with poller: token=Token(436207616), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(452984832), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(184549384), interests=READABLE | WRITABLE
registering event source with poller: token=Token(469762048), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886087), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(486539264), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', registering event source with poller: token=Token(167772162), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
registering event source with poller: token=Token(503316480), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(520093696), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321538), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
registering event source with poller: token=Token(335544322), interests=READABLE | WRITABLE
deregistering event source from poller
:deregistering event source from poller
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "aweg" }registering event source with poller: token=Token(318767108), interests=READABLE | WRITABLE
registering event source with poller: token=Token(419430409), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"aweg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(335544324), interests=READABLE | WRITABLE
registering event source with poller: token=Token(536870912), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(352321540), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(201326600), interests=READABLE | WRITABLE
registering event source with poller: token=Token(369098756), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(385875972), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663303), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(184549378), interests=READABLE | WRITABLE
registering event source with poller: token=Token(402653188), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(369098754), interests=READABLE | WRITABLE
registering event source with poller: token=Token(419430404), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'thread 'rocket-worker-threadderegistering event source from poller
rocket-worker-thread' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:registering event source with poller: token=Token(352321538), interests=READABLE | WRITABLE
24called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All }):', 25src/./game/utils.rs
:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 60, kind: TimedOut, message: "Operation timed out" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "waeg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "waeg" }registering event source with poller: token=Token(536870915), interests=READABLE | WRITABLE
registering event source with poller: token=Token(436207625), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"waeg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"waeg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(553648131), interests=READABLE | WRITABLE
registering event source with poller: token=Token(436207620), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(452984836), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(218103816), interests=READABLE | WRITABLE
registering event source with poller: token=Token(469762052), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(117440519), interests=READABLE | WRITABLE
25registering event source with poller: token=Token(486539268), interests=READABLE | WRITABLE

deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(201326594), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(503316484), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(520093700), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875970), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })registering event source with poller: token=Token(369098754), interests=READABLE | WRITABLE
deregistering event source from poller
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "aweg" }registering event source with poller: token=Token(452984841), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(469762057), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(536870916), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425347), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(587202563), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(234881032), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979779), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(134217735), interests=READABLE | WRITABLE
registering event source with poller: token=Token(620756995), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24deregistering event source from poller
:thread '25rocket-worker-thread
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(637534211), interests=READABLE | WRITABLE
registering event source with poller: token=Token(218103810), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(402653186), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:thread '24rocket-worker-thread:' panicked at '25called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(654311427), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875970), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "awe" }registering event source with poller: token=Token(486539273), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(503316489), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"awe","visible_type":"All"}
registering event source with poller: token=Token(671088643), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(687865859), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(704643075), interests=READABLE | WRITABLE
registering event source with poller: token=Token(553648132), interests=READABLE | WRITABLE
registering event source with poller: token=Token(251658248), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(150994951), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "awe", visible_type: All })', registering event source with poller: token=Token(721420291), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(234881026), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(738197507), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(419430402), interests=READABLE | WRITABLE
registering event source with poller: token=Token(754974723), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(402653186), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "awe", visible_type: All })', src/./game/utils.rs:24:25thread '
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "gaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "gaweg" }registering event source with poller: token=Token(520093705), interests=READABLE | WRITABLE
registering event source with poller: token=Token(771751939), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"gaweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"gaweg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(536870921), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425348), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(553648137), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(268435464), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425353), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(167772167), interests=READABLE | WRITABLE
registering event source with poller: token=Token(587202569), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(251658242), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979785), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(436207618), interests=READABLE | WRITABLE
registering event source with poller: token=Token(620757001), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(419430402), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "aweg" }registering event source with poller: token=Token(788529155), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534217), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(805306371), interests=READABLE | WRITABLE
registering event source with poller: token=Token(587202564), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(822083587), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(285212680), interests=READABLE | WRITABLE
registering event source with poller: token=Token(838860803), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25
registering event source with poller: token=Token(855638019), interests=READABLE | WRITABLE
registering event source with poller: token=Token(184549383), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(268435458), interests=READABLE | WRITABLE
registering event source with poller: token=Token(872415235), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(452984834), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
registering event source with poller: token=Token(889192451), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(436207618), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "aw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "aw" }registering event source with poller: token=Token(654311433), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969667), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"aw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"aw","visible_type":"All"}
registering event source with poller: token=Token(671088649), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(603979780), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(620756996), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(301989896), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534212), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(654311428), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(201326599), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(671088644), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'registering event source with poller: token=Token(285212674), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(469762050), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(687865860), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'thread 'rocket-worker-threadrocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aw", visible_type: All })' panicked at 'deregistering event source from poller
', called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aw", visible_type: All })registering event source with poller: token=Token(452984834), interests=READABLE | WRITABLE
deregistering event source from poller
', src/./game/utils.rssrc/./game/utils.rs::2424::2525

deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "gewae")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "gewae" }registering event source with poller: token=Token(922746883), interests=READABLE | WRITABLE
registering event source with poller: token=Token(704643076), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"gewae\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"gewae","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(939524099), interests=READABLE | WRITABLE
registering event source with poller: token=Token(687865865), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(956301315), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(318767112), interests=READABLE | WRITABLE
registering event source with poller: token=Token(973078531), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(218103815), interests=READABLE | WRITABLE
thread 'rocket-worker-threadregistering event source with poller: token=Token(989855747), interests=READABLE | WRITABLE
' panicked at 'deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gewae", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1006632963), interests=READABLE | WRITABLE
24:called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gewae", visible_type: All })25', src/./game/utils.rs
:24:25
registering event source with poller: token=Token(301989890), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(486539266), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1023410179), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gewae", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gewae", visible_type: All })', deregistering event source from poller
src/./game/utils.rsderegistering event source from poller
:24:25
registering event source with poller: token=Token(469762050), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gewae", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "gaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "gaw" }registering event source with poller: token=Token(721420292), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1040187395), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"gaw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"gaw","visible_type":"All"}
registering event source with poller: token=Token(738197508), interests=READABLE | WRITABLE
registering event source with poller: token=Token(704643081), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(754974724), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(335544328), interests=READABLE | WRITABLE
registering event source with poller: token=Token(721420297), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(234881031), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(738197513), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(318767106), interests=READABLE | WRITABLE
registering event source with poller: token=Token(754974729), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(503316482), interests=READABLE | WRITABLE
registering event source with poller: token=Token(771751945), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(486539266), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "gaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "gaw" }registering event source with poller: token=Token(1056964611), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1073741827), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"gaw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"gaw","visible_type":"All"}
registering event source with poller: token=Token(788529161), interests=READABLE | WRITABLE
registering event source with poller: token=Token(771751940), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(805306377), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(352321544), interests=READABLE | WRITABLE
registering event source with poller: token=Token(822083593), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(251658247), interests=READABLE | WRITABLE
registering event source with poller: token=Token(838860809), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaw", visible_type: All })', registering event source with poller: token=Token(855638025), interests=READABLE | WRITABLE
src/./game/utils.rs:registering event source with poller: token=Token(335544322), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
registering event source with poller: token=Token(520093698), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(872415241), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'registering event source with poller: token=Token(503316482), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "look")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "look" }registering event source with poller: token=Token(1090519043), interests=READABLE | WRITABLE
registering event source with poller: token=Token(889192457), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"look\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"look","visible_type":"All"}
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1107296259), interests=READABLE | WRITABLE
registering event source with poller: token=Token(788529156), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1124073475), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(369098760), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1140850691), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1157627907), interests=READABLE | WRITABLE
registering event source with poller: token=Token(268435463), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "look", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(1174405123), interests=READABLE | WRITABLE
deregistering event source from poller
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "look", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(352321538), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(536870914), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1191182339), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "look", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24deregistering event source from poller
:25
deregistering event source from poller
registering event source with poller: token=Token(520093698), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'thread 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "look", visible_type: All })rocket-worker-thread', ' panicked at 'src/./game/utils.rscalled `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "look", visible_type: All }):', 24src/./game/utils.rs::2524:
25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "to+be+frank+you+")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "to be frank you " }registering event source with poller: token=Token(905969673), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(922746889), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"to be frank you \",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"to be frank you ","visible_type":"All"}
registering event source with poller: token=Token(1207959555), interests=READABLE | WRITABLE
registering event source with poller: token=Token(805306372), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(822083588), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(838860804), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875976), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(855638020), interests=READABLE | WRITABLE
registering event source with poller: token=Token(285212679), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "to be frank you ", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "to be frank you ", visible_type: All })', src/./game/utils.rs:
24deregistering event source from poller
:registering event source with poller: token=Token(872415236), interests=READABLE | WRITABLE
registering event source with poller: token=Token(369098754), interests=READABLE | WRITABLE
25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(889192452), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(553648130), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "to be frank you ", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(536870914), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "to be frank you ", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "to be frank you ", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "are+actuall+y")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "are actuall y" }registering event source with poller: token=Token(939524105), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969668), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"are actuall y\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"are actuall y","visible_type":"All"}
registering event source with poller: token=Token(956301321), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1224736771), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1241513987), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(402653192), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1258291203), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1275068419), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(301989895), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "are actuall y", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(385875970), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1291845635), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "are actuall y", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "are actuall y", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(570425346), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1308622851), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(553648130), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "are actuall y", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "are actuall y", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aef")
   >> url-encoded field: ("message", "KIND+OF+DOOMED")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aef", message: "KIND OF DOOMED" }registering event source with poller: token=Token(922746884), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1325400067), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aef\",\"message\":\"KIND OF DOOMED\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aef","message":"KIND OF DOOMED","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(939524100), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(973078537), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301316), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(419430408), interests=READABLE | WRITABLE
registering event source with poller: token=Token(973078532), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(318767111), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855748), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "KIND OF DOOMED", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1006632964), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(402653186), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(587202562), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1023410180), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "KIND OF DOOMED", visible_type: All })deregistering event source from poller
', src/./game/utils.rs:24thread 'thread 'rocket-worker-thread:rocket-worker-thread' panicked at '25' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "KIND OF DOOMED", visible_type: All })deregistering event source from poller

', called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "KIND OF DOOMED", visible_type: All })src/./game/utils.rsregistering event source with poller: token=Token(570425346), interests=READABLE | WRITABLE
:deregistering event source from poller
24:', src/./game/utils.rs25:
24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aef", message: "KIND OF DOOMED", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html?username=aef&serverip=wef text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(201326599), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(50331662), interests=READABLE | WRITABLE
GET /Room.css text/css:
GET /reset.css text/css:
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(385875974), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108881), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Response succeeded.
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1342177283), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1040187396), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1358954499), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(989855753), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1375731715), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(436207624), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(1392508931), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
deregistering event source from poller
registering event source with poller: token=Token(335544327), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1409286147), interests=READABLE | WRITABLE
registering event source with poller: token=Token(419430402), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1426063363), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
registering event source with poller: token=Token(603979778), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1442840579), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
registering event source with poller: token=Token(587202562), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(1056964612), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1459617795), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1006632969), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1073741828), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1090519044), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(452984840), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1107296260), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1124073476), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321543), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(436207618), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1140850692), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(620756994), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1157627908), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(603979778), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gaw" }registering event source with poller: token=Token(1476395011), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1174405124), interests=READABLE | WRITABLE
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gaw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gaw","visible_type":"All"}
registering event source with poller: token=Token(1493172227), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(1509949443), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1023410185), interests=READABLE | WRITABLE
registering event source with poller: token=Token(469762056), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1526726659), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
registering event source with poller: token=Token(369098759), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1543503875), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(452984834), interests=READABLE | WRITABLE
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1560281091), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25
registering event source with poller: token=Token(1577058307), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534210), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(620756994), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gaw" }registering event source with poller: token=Token(1191182340), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1593835523), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gaw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gaw","visible_type":"All"}
registering event source with poller: token=Token(1207959556), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1040187401), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1224736772), interests=READABLE | WRITABLE
registering event source with poller: token=Token(486539272), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1241513988), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(385875975), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1258291204), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(469762050), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1275068420), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1291845636), interests=READABLE | WRITABLE
registering event source with poller: token=Token(654311426), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(637534210), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gaweg" }registering event source with poller: token=Token(1610612739), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1308622852), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gaweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gaweg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1627389955), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1056964617), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1644167171), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1660944387), interests=READABLE | WRITABLE
registering event source with poller: token=Token(503316488), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1677721603), interests=READABLE | WRITABLE
' panicked at 'registering event source with poller: token=Token(402653191), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaweg", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(486539266), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1694498819), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaweg", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(671088642), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1711276035), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(654311426), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(1325400068), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1342177284), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
registering event source with poller: token=Token(1728053251), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1073741833), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1744830467), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(520093704), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1761607683), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(419430407), interests=READABLE | WRITABLE
thread 'rocket-worker-threadregistering event source with poller: token=Token(1778384899), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(503316482), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1795162115), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1811939331), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })registering event source with poller: token=Token(687865858), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', registering event source with poller: token=Token(671088642), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gawe" }registering event source with poller: token=Token(1358954500), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1828716547), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gawe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gawe","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1375731716), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1090519049), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1392508932), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(536870920), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1409286148), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(436207623), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1426063364), interests=READABLE | WRITABLE
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1442840580), interests=READABLE | WRITABLE
deregistering event source from poller
:registering event source with poller: token=Token(520093698), interests=READABLE | WRITABLE
24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller
registering event source with poller: token=Token(1459617796), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(704643074), interests=READABLE | WRITABLE
thread '
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(687865858), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gawe" }registering event source with poller: token=Token(1845493763), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1862270979), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gawe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gawe","visible_type":"All"}
registering event source with poller: token=Token(1476395012), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1493172228), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296265), interests=READABLE | WRITABLE
registering event source with poller: token=Token(553648136), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1509949444), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1526726660), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(452984839), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(536870914), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1543503876), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1560281092), interests=READABLE | WRITABLE
registering event source with poller: token=Token(721420290), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(704643074), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gawe" }registering event source with poller: token=Token(1879048195), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1577058308), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gawe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gawe","visible_type":"All"}
registering event source with poller: token=Token(1895825411), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1124073481), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1912602627), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(570425352), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1929379843), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(469762055), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1946157059), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1962934275), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })registering event source with poller: token=Token(553648130), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', registering event source with poller: token=Token(738197506), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
registering event source with poller: token=Token(1979711491), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })deregistering event source from poller
', src/./game/utils.rs:deregistering event source from poller
24:25
registering event source with poller: token=Token(721420290), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gawe" }registering event source with poller: token=Token(1593835524), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1996488707), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gawe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gawe","visible_type":"All"}
registering event source with poller: token=Token(1610612740), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1140850697), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1627389956), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1644167172), interests=READABLE | WRITABLE
registering event source with poller: token=Token(587202568), interests=READABLE | WRITABLE
registering event source with poller: token=Token(486539271), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1660944388), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'thread 'rocket-worker-threadrocket-worker-thread' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', ', src/./game/utils.rssrc/./game/utils.rs::2424::2525

deregistering event source from poller
registering event source with poller: token=Token(570425346), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1677721604), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(754974722), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1694498820), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(738197506), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "look")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "look" }registering event source with poller: token=Token(2013265923), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1711276036), interests=READABLE | WRITABLE
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"look\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"look","visible_type":"All"}
registering event source with poller: token=Token(2030043139), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1157627913), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2046820355), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(603979784), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2063597571), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "look", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(503316487), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(2080374787), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(587202562), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "look", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(2097152003), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
registering event source with poller: token=Token(2113929219), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "look", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(771751938), interests=READABLE | WRITABLE
24:25
registering event source with poller: token=Token(754974722), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "look", visible_type: All })', src/./game/utils.rs:thread '24rocket-worker-thread:' panicked at '25called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "look", visible_type: All })
', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "to+b")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "to b" }registering event source with poller: token=Token(1728053252), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2130706435), interests=READABLE | WRITABLE
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"to b\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"to b","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1744830468), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1761607684), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1174405129), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1778384900), interests=READABLE | WRITABLE
registering event source with poller: token=Token(620757000), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(520093703), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(1795162116), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "to b", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1811939332), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "to b", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1828716548), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979778), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(788529154), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(771751938), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "to b", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "to b", visible_type: All })thread '', rocket-worker-threadsrc/./game/utils.rs' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "to b", visible_type: All })24', :src/./game/utils.rs25:
24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "to+be+frank")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "to be frank" }registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1845493764), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"to be frank\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"to be frank","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(16777219), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1191182345), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(33554435), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(637534216), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331651), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "to be frank", visible_type: All })', src/./game/utils.rsderegistering event source from poller
registering event source with poller: token=Token(536870919), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(67108867), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "to be frank", visible_type: All })', src/./game/utils.rs:24:25
24:25
deregistering event source from poller
registering event source with poller: token=Token(620756994), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886083), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "to be frank", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(100663299), interests=READABLE | WRITABLE
:25
registering event source with poller: token=Token(805306370), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(788529154), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "to be frank", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "to be frank", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'receive error of client_response
', src/client.rs:47:23
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: JoinError::Panic(Id(9), ...)', src/client.rs:52:14
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "you+need+to+actually+think+about+the+things+that+you+know+and+thenfuck+them+all+")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "you need to actually think about the things that you know and thenfuck them all " }registering event source with poller: token=Token(1862270980), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1879048196), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"you need to actually think about the things that you know and thenfuck them all \",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"you need to actually think about the things that you know and thenfuck them all ","visible_type":"All"}
registering event source with poller: token=Token(117440515), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(134217731), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1207959561), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(654311432), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(150994947), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "you need to actually think about the things that you know and thenfuck them all ", visible_type: All })', registering event source with poller: token=Token(553648135), interests=READABLE | WRITABLE
src/./game/utils.rs:registering event source with poller: token=Token(167772163), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(184549379), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534210), interests=READABLE | WRITABLE
rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "you need to actually think about the things that you know and thenfuck them all ", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24registering event source with poller: token=Token(201326595), interests=READABLE | WRITABLE
:25
registering event source with poller: token=Token(822083586), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "you need to actually think about the things that you know and thenfuck them all ", visible_type: All })', deregistering event source from poller
src/./game/utils.rsregistering event source with poller: token=Token(805306370), interests=READABLE | WRITABLE
deregistering event source from poller
:deregistering event source from poller
24:25
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "you need to actually think about the things that you know and thenfuck them all ", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "you need to actually think about the things that you know and thenfuck them all ", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "cuz+you+")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "cuz you " }registering event source with poller: token=Token(1895825412), interests=READABLE | WRITABLE
registering event source with poller: token=Token(218103811), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"cuz you \",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"cuz you ","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1912602628), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1224736777), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1241513993), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(671088648), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1258291209), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(570425351), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "cuz you ", visible_type: All })', registering event source with poller: token=Token(1275068425), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(654311426), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1291845641), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "cuz you ", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25deregistering event source from poller

thread 'rocket-worker-threadregistering event source with poller: token=Token(838860802), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "cuz you ", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(1308622857), interests=READABLE | WRITABLE
:25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(822083586), interests=READABLE | WRITABLE
deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "cuz you ", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "cuz you ", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "have+no+idea")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "have no idea" }registering event source with poller: token=Token(234881027), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(251658243), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"have no idea\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"have no idea","visible_type":"All"}
registering event source with poller: token=Token(1325400073), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1342177289), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(687865864), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1358954505), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1929379844), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "have no idea", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(587202567), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(1946157060), interests=READABLE | WRITABLE
24deregistering event source from poller
:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "have no idea", visible_type: All })', registering event source with poller: token=Token(671088642), interests=READABLE | WRITABLE
src/./game/utils.rsregistering event source with poller: token=Token(1962934276), interests=READABLE | WRITABLE
deregistering event source from poller
:24:registering event source with poller: token=Token(1979711492), interests=READABLE | WRITABLE
deregistering event source from poller
25
registering event source with poller: token=Token(855638018), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "have no idea", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24registering event source with poller: token=Token(838860802), interests=READABLE | WRITABLE
deregistering event source from poller
:thread 'rocket-worker-thread25
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "have no idea", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "have no idea", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "in+the+world")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "in the world" }registering event source with poller: token=Token(268435459), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1996488708), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"in the world\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"in the world","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(285212675), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1375731721), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(301989891), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(704643080), interests=READABLE | WRITABLE
registering event source with poller: token=Token(318767107), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "in the world", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(335544323), interests=READABLE | WRITABLE

registering event source with poller: token=Token(603979783), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(687865858), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "in the world", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(352321539), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "in the world", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(872415234), interests=READABLE | WRITABLE
registering event source with poller: token=Token(369098755), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "in the world", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24deregistering event source from poller
:25
registering event source with poller: token=Token(855638018), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "in the world", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "about+what+they+are+and+waht+they+could+possibly+")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "about what they are and waht they could possibly " }registering event source with poller: token=Token(2013265924), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875971), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"about what they are and waht they could possibly \",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"about what they are and waht they could possibly ","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(2030043140), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1392508937), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2046820356), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(721420296), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2063597572), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(620756999), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "about what they are and waht they could possibly ", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(2080374788), interests=READABLE | WRITABLE
deregistering event source from poller
:24:25
registering event source with poller: token=Token(704643074), interests=READABLE | WRITABLE
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "about what they are and waht they could possibly ", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller
registering event source with poller: token=Token(2097152004), interests=READABLE | WRITABLE

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "about what they are and waht they could possibly ", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
registering event source with poller: token=Token(889192450), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929220), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(872415234), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "about what they are and waht they could possibly ", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "about what they are and waht they could possibly ", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "e+")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "e " }registering event source with poller: token=Token(402653187), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2130706436), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"e \",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"e ","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(419430403), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1409286153), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1426063369), interests=READABLE | WRITABLE
registering event source with poller: token=Token(738197512), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1442840585), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e ", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(637534215), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1459617801), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(721420290), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e ", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1476395017), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e ", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
registering event source with poller: token=Token(1493172233), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969666), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(889192450), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e ", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e ", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "be")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "be" }registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1509949449), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"be\",\"visible_type\":\"All\"}")   >> Outcome: Success
{"room_name":"rustkill","username":"guest","message":"be","visible_type":"All"}
registering event source with poller: token=Token(16777220), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(436207619), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(33554436), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(754974728), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331652), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(654311431), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(67108868), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "be", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "be", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(83886084), interests=READABLE | WRITABLE
registering event source with poller: token=Token(738197506), interests=READABLE | WRITABLE
:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(100663300), interests=READABLE | WRITABLE
registering event source with poller: token=Token(922746882), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "be", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "be", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(905969666), interests=READABLE | WRITABLE
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "be", visible_type: All })', src/./game/utils.rs:24:25
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(83886097), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331663), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >>    >> Response succeeded.
Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(50331664), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108879), interests=READABLE | WRITABLE
GET /playerInfo/event text/event-stream:
   >> GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
registering event source with poller: token=Token(100663313), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108878), interests=READABLE | WRITABLE
registering event source with poller: token=Token(218103815), interests=READABLE | WRITABLE
registering event source with poller: token=Token(402653190), interests=READABLE | WRITABLE
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(83886095), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(67108880), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(117440529), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(100663311), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
registering event source with poller: token=Token(134217745), interests=READABLE | WRITABLE
registering event source with poller: token=Token(419430406), interests=READABLE | WRITABLE
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
GET /reset.css text/css:
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(83886094), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
registering event source with poller: token=Token(83886096), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >>    >> Response succeeded.
   >>    >> Outcome: Success
Outcome: Success
Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(100663310), interests=READABLE | WRITABLE
registering event source with poller: token=Token(234881031), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> GET /images/Screenshot2022-12-02202250.png image/avif:
Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(150994961), interests=READABLE | WRITABLE
registering event source with poller: token=Token(436207622), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 1.16s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.17s
     Running `target/debug/rust_kill 8000 true`
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 48, kind: AddrInUse, message: "Address already in use" }', src/server/host.rs:31:63
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.17s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.18s
     Running `target/debug/rust_kill 8002 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.17s
     Running `target/debug/rust_kill 8003 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.17s
     Running `target/debug/rust_kill 8004 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.17s
     Running `target/debug/rust_kill 8005 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Room.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(117440527), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663312), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
registering event source with poller: token=Token(452984838), interests=READABLE | WRITABLE
registering event source with poller: token=Token(167772177), interests=READABLE | WRITABLE
GET /jquery.js:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "aweg", message: "aweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("message", "awegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "aweg", message: "awegaweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("message", "awegawegaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "aweg", message: "awegawegaw" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
GET /Room.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(469762054), interests=READABLE | WRITABLE
registering event source with poller: token=Token(134217743), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegaweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegawegweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegawegweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegawegwegawega")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegawegwegawega" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegawegwegawegawega")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegawegwegawegawega" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegawegwegawegawegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegawegwegawegawegaweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegawegwegawegawegawegwaegaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegawegwegawegawegawegwaegaw" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegawegwegawegawegawegwaegawegawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegawegwegawegawegawegwaegawegawe" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(184549393), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(117440526), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Outcome: Success
GET /nicepage.js:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwegaweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegwegawegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegwegawegaweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 1.04s
     Running `target/debug/rust_kill 8000 true`
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 48, kind: AddrInUse, message: "Address already in use" }', src/server/host.rs:31:63
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.18s
     Running `target/debug/rust_kill 8001 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.17s
     Running `target/debug/rust_kill 8002 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.17s
     Running `target/debug/rust_kill 8003 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.17s
     Running `target/debug/rust_kill 8004 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
warning: unused import: `std::collections::HashMap`
 --> src/server/host.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GameState`, `RevealResult`
  --> src/server/host.rs:13:32
   |
13 | use crate::game_info::{Player, GameState, TurnType, ClientInfo, RevealResult};
   |                                ^^^^^^^^^                        ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/server/client_manager.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::net::TcpStream`
 --> src/server/client_manager.rs:7:5
  |
7 | use tokio::net::TcpStream;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/server/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/server/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/server/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/server/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/client_manager.rs:13:48
   |
13 | use crate::server::client_manager::game_info::{GameState, TurnType, RevealResult};
   |                                                ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `RoleType`
  --> src/server/client_manager.rs:15:32
   |
15 | use crate::game_info::{Player, RoleType};
   |                                ^^^^^^^^

warning: unused import: `crate::server::host::client_addr`
 --> src/server/command_processor.rs:1:5
  |
1 | use crate::server::host::client_addr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::mpsc::Receiver`
 --> src/server/command_processor.rs:5:5
  |
5 | use tokio::sync::mpsc::Receiver;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GameState`, `RevealResult`, `TurnType`
  --> src/server/command_processor.rs:11:51
   |
11 | use crate::server::command_processor::game_info::{GameState, TurnType, RevealResult};
   |                                                   ^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Room`
  --> src/server/command_processor.rs:12:19
   |
12 | use crate::data::{Room};
   |                   ^^^^

warning: unused imports: `Player`, `RoleType`
  --> src/server/command_processor.rs:13:24
   |
13 | use crate::game_info::{Player, RoleType};
   |                        ^^^^^^  ^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/./game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/./game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/./game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/./game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `send_room`
  --> src/client.rs:11:33
   |
11 | use game::utils::{send_message, send_room, send_delay_room};
   |                                 ^^^^^^^^^

warning: unused import: `collections::HashMap`
 --> src/client/.././game/game_loop.rs:1:16
  |
1 | use std::{vec, collections::HashMap};
  |                ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> src/client/.././game/game_loop.rs:3:21
  |
3 | use rocket::serde::{Serialize, Deserialize};
  |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `RevealResult`
 --> src/client/.././game/game_loop.rs:8:61
  |
8 | use crate::game_info::{RoleType, Player, TurnType, WinType, RevealResult};
  |                                                             ^^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
 --> src/client/.././game/utils.rs:7:5
  |
7 | use rocket::serde::json::Json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client/room.rs:11:46
   |
11 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `VisibleType`
  --> src/client/room.rs:12:62
   |
12 | use crate::{client::room::game_info::Player, data::{Message, VisibleType}};
   |                                                              ^^^^^^^^^^^

warning: unused import: `serde::json::Json`
  --> src/client.rs:22:46
   |
22 | use rocket::{tokio::sync::broadcast::Sender, serde::json::Json};
   |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `std::io`
  --> src/main.rs:15:5
   |
15 | use std::io;
   |     ^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/main.rs:24:21
   |
24 | use rocket::serde::{Serialize, Deserialize};
   |                     ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `rocket::serde::json::Json`
  --> src/main.rs:28:5
   |
28 | use rocket::serde::json::Json;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `event`
  --> src/server/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/server/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/server/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `id`
  --> src/server/command_processor.rs:15:67
   |
15 | pub async fn server_send_room(client_addr: &String, room: String, id: usize) -> Result<(), ()>{
   |                                                                   ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `event`
  --> src/./game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/./game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/./game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `event`
  --> src/client/.././game/game_loop.rs:13:15
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:43:25
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:61:38
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `room`
  --> src/client/.././game/game_loop.rs:69:36
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_room`

warning: unused variable: `player`
  --> src/client/.././game/utils.rs:59:13
   |
59 | pub fn mute(player:Player){
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `sender`
  --> src/client/room.rs:16:41
   |
16 | pub async fn connect_room(name: String, sender: Sender<Message>) {
   |                                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `player`
  --> src/client/room.rs:21:25
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_player`

warning: unused variable: `idx`
  --> src/client/room.rs:21:41
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `client_name`
  --> src/client.rs:28:41
   |
28 | pub async fn connect(server_addr: &str, client_name: &str, sender_msg: Sender<Message>, sender_room: Sender<Room>) -> Result<JoinHandle<(...
   |                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_name`

warning: unused variable: `form`
  --> src/main.rs:36:19
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `form`
  --> src/main.rs:41:19
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_form`

warning: unused variable: `queue`
  --> src/main.rs:60:49
   |
60 | async fn post_message(form: Form<MessageEvent>, queue: &State<Sender<Message>>){
   |                                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_queue`

warning: function `post_host_room` is never used
  --> src/main.rs:36:4
   |
36 | fn post_host_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `post_join_room` is never used
  --> src/main.rs:41:4
   |
41 | fn post_join_room(form: Form<UserConnectEvent>){
   |    ^^^^^^^^^^^^^^

warning: function `post_game_event` is never used
  --> src/main.rs:46:4
   |
46 | fn post_game_event(form: Form<GameEvent>){
   |    ^^^^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/server/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/server/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/server/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/server/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/server/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/server/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/server/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/server/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/server/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/server/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/server/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/server/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/server/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/server/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/server/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/server/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/server/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/server/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `client_send_room` is never used
  --> src/client.rs:87:14
   |
87 | pub async fn client_send_room(server_addr: &String, room: String) -> Result<(), ()>{
   |              ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/./game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/./game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/./game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/./game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/./game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/./game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/./game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/./game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/./game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/./game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/./game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `mute` is never used
  --> src/./game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/./game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `add_player` is never used
  --> src/client/room.rs:21:14
   |
21 | pub async fn add_player(player: Player, idx: i32) {
   |              ^^^^^^^^^^

warning: function `spliter` is never used
 --> src/client/../utils.rs:6:8
  |
6 | pub fn spliter() -> char {'\x03'}
  |        ^^^^^^^

warning: function `spliter_kv` is never used
 --> src/client/../utils.rs:8:8
  |
8 | pub fn spliter_kv() -> char {'\x04'}
  |        ^^^^^^^^^^

warning: function `encode` is never used
  --> src/client/../utils.rs:10:8
   |
10 | pub fn encode(key: &str, val: &str) -> String {
   |        ^^^^^^

warning: function `decode` is never used
  --> src/client/../utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `server_write` is never used
  --> src/client/../utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `client_write` is never used
  --> src/client/../utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/client/../utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/client/../utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/client/../utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: associated function `as_str` is never used
  --> src/client/../game/game_info.rs:72:12
   |
72 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: associated function `next` is never used
  --> src/client/../game/game_info.rs:85:12
   |
85 |     pub fn next(&self) -> Self {
   |            ^^^^

warning: function `update` is never used
  --> src/client/.././game/game_loop.rs:13:8
   |
13 | pub fn update(event:GameEvent, room:&mut Room){
   |        ^^^^^^

warning: function `assign_role` is never used
  --> src/client/.././game/game_loop.rs:32:8
   |
32 | pub fn assign_role(room:&mut Room){
   |        ^^^^^^^^^^^

warning: function `detect_kill_vote` is never used
  --> src/client/.././game/game_loop.rs:43:8
   |
43 | pub fn detect_kill_vote(room:&mut Room){
   |        ^^^^^^^^^^^^^^^^

warning: function `vote_id` is never used
  --> src/client/.././game/game_loop.rs:48:8
   |
48 | pub fn vote_id(id: usize, room:&mut Room){ 
   |        ^^^^^^^

warning: function `vote_player` is never used
  --> src/client/.././game/game_loop.rs:56:8
   |
56 | pub fn vote_player(player:&Player, room:&mut Room){ 
   |        ^^^^^^^^^^^

warning: function `antidote` is never used
  --> src/client/.././game/game_loop.rs:61:8
   |
61 | pub fn antidote(player: &mut Player, room:&mut Room){
   |        ^^^^^^^^

warning: function `poison` is never used
  --> src/client/.././game/game_loop.rs:69:8
   |
69 | pub fn poison(player: &mut Player, room:&mut Room){
   |        ^^^^^^

warning: function `reveal` is never used
  --> src/client/.././game/game_loop.rs:77:8
   |
77 | pub fn reveal(player: &Player, room:&mut Room){
   |        ^^^^^^

warning: function `detect_win` is never used
  --> src/client/.././game/game_loop.rs:88:8
   |
88 | pub fn detect_win(room:&mut Room){
   |        ^^^^^^^^^^

warning: function `send_message` is never used
  --> src/client/.././game/utils.rs:16:8
   |
16 | pub fn send_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^^^^

warning: function `send_delay_message` is never used
  --> src/client/.././game/utils.rs:29:14
   |
29 | pub async fn send_delay_message(queue: Sender<Message>, name:String, text:String, visible_type:VisibleType, millisecond:u64) -> Result<Jo...
   |              ^^^^^^^^^^^^^^^^^^

warning: function `send_room` is never used
  --> src/client/.././game/utils.rs:43:8
   |
43 | pub fn send_room(queue: Sender<Room>, room: Room) -> Result<JoinHandle<()>, ()>{
   |        ^^^^^^^^^

warning: function `send_delay_room` is never used
  --> src/client/.././game/utils.rs:50:14
   |
50 | pub async fn send_delay_room(queue: Sender<Room>, room: Room, millisecond:u64) -> Result<JoinHandle<()>, ()>{
   |              ^^^^^^^^^^^^^^^

warning: function `mute` is never used
  --> src/client/.././game/utils.rs:59:8
   |
59 | pub fn mute(player:Player){
   |        ^^^^

warning: function `mute_all` is never used
  --> src/client/.././game/utils.rs:62:8
   |
62 | pub fn mute_all(){
   |        ^^^^^^^^

warning: function `server_write` is never used
  --> src/utils.rs:22:14
   |
22 | pub async fn server_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `struct_to_string` is never used
   --> src/utils.rs:135:8
    |
135 | pub fn struct_to_string<T>(obj: &T) -> (String, String)
    |        ^^^^^^^^^^^^^^^^

warning: function `decode` is never used
  --> src/utils.rs:14:8
   |
14 | pub fn decode(encoded: &str) -> (&str, &str) {
   |        ^^^^^^

warning: function `client_write` is never used
  --> src/utils.rs:30:14
   |
30 | pub async fn client_write(socket: &mut OwnedWriteHalf, msg: &str) -> Result<(), ()>{
   |              ^^^^^^^^^^^^

warning: function `read_all` is never used
  --> src/utils.rs:78:14
   |
78 | pub async fn read_all(mut red: BufReader<&mut OwnedReadHalf>) -> Result<(String, String), String>{
   |              ^^^^^^^^

warning: function `string_to_struct` is never used
   --> src/utils.rs:143:8
    |
143 | pub fn string_to_struct<'de, T>(s: &'de String) -> T
    |        ^^^^^^^^^^^^^^^^

warning: `rust_kill` (bin "rust_kill") generated 123 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.17s
     Running `target/debug/rust_kill 8005 false`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:29:86
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
GET /Room.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(117440528), interests=READABLE | WRITABLE
registering event source with poller: token=Token(134217742), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegawe" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegawegaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegawegaw" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awegawegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 51, kind: NetworkUnreachable, message: "Network is unreachable" }', src/client.rs:76:53
MessageEvent { room_name: "rustkill", username: "guest", message: "awegawegaweg" }   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(201326609), interests=READABLE | WRITABLE
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(486539270), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(251658247), interests=READABLE | WRITABLE
registering event source with poller: token=Token(134217744), interests=READABLE | WRITABLE
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(503316486), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(150994959), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(150994960), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(150994958), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(268435463), interests=READABLE | WRITABLE
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(167772175), interests=READABLE | WRITABLE
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(167772176), interests=READABLE | WRITABLE
registering event source with poller: token=Token(218103825), interests=READABLE | WRITABLE
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(167772174), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(520093702), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(536870918), interests=READABLE | WRITABLE
registering event source with poller: token=Token(285212679), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(184549391), interests=READABLE | WRITABLE
registering event source with poller: token=Token(301989895), interests=READABLE | WRITABLE
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
GET /reset.css text/css:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Outcome: Success
Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Response succeeded.
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
registering event source with poller: token=Token(553648134), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(201326607), interests=READABLE | WRITABLE
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(234881041), interests=READABLE | WRITABLE
registering event source with poller: token=Token(184549390), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425350), interests=READABLE | WRITABLE
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(184549392), interests=READABLE | WRITABLE
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(318767111), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
registering event source with poller: token=Token(335544327), interests=READABLE | WRITABLE
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(218103823), interests=READABLE | WRITABLE
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Outcome: Success
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(251658257), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
registering event source with poller: token=Token(234881039), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(251658255), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321543), interests=READABLE | WRITABLE
   >> Response succeeded.
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /jquery.js:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(201326606), interests=READABLE | WRITABLE
registering event source with poller: token=Token(268435473), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(587202566), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(285212689), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
GET /style.css text/css:
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(218103822), interests=READABLE | WRITABLE
registering event source with poller: token=Token(268435471), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(369098759), interests=READABLE | WRITABLE
registering event source with poller: token=Token(234881038), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(301989905), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326608), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
   >> Matched: (events) GET /message/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(603979782), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(218103824), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(318767121), interests=READABLE | WRITABLE
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(285212687), interests=READABLE | WRITABLE
registering event source with poller: token=Token(251658254), interests=READABLE | WRITABLE
registering event source with poller: token=Token(620756998), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /style.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
GET /Room.js:
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /nicepage.js:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(234881040), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875975), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
registering event source with poller: token=Token(268435470), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(637534214), interests=READABLE | WRITABLE
registering event source with poller: token=Token(251658256), interests=READABLE | WRITABLE
registering event source with poller: token=Token(301989903), interests=READABLE | WRITABLE
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(335544337), interests=READABLE | WRITABLE
GET /jquery.js:
registering event source with poller: token=Token(402653191), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(285212686), interests=READABLE | WRITABLE
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(352321553), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(318767119), interests=READABLE | WRITABLE
registering event source with poller: token=Token(268435472), interests=READABLE | WRITABLE
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(654311430), interests=READABLE | WRITABLE
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(419430407), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /reset.css text/css:
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(301989902), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(671088646), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(369098769), interests=READABLE | WRITABLE
GET /jquery.js:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(335544335), interests=READABLE | WRITABLE
   >> Response succeeded.
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Response succeeded.
   >> Response succeeded.
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >>    >> Response succeeded.
Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(352321551), interests=READABLE | WRITABLE
registering event source with poller: token=Token(285212688), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "waeg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "waeg" }registering event source with poller: token=Token(1526726665), interests=READABLE | WRITABLE
registering event source with poller: token=Token(117440516), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"waeg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"waeg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1543503881), interests=READABLE | WRITABLE
registering event source with poller: token=Token(452984835), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1560281097), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Remote left: channel closed.
registering event source with poller: token=Token(1577058313), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1593835529), interests=READABLE | WRITABLE
registering event source with poller: token=Token(771751944), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1610612745), interests=READABLE | WRITABLE
registering event source with poller: token=Token(671088647), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1627389961), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadregistering event source with poller: token=Token(922746882), interests=READABLE | WRITABLE
registering event source with poller: token=Token(754974722), interests=READABLE | WRITABLE
registering event source with poller: token=Token(939524098), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "waeg", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
deregistering event source from poller
deregistering event source from poller
thread 'thread 'rocket-worker-thread' panicked at 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "waeg", visible_type: All })', thread 'src/./game/utils.rs:24:25
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "waeg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(134217732), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(150994948), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(1644167177), interests=READABLE | WRITABLE
registering event source with poller: token=Token(469762051), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(486539267), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(788529160), interests=READABLE | WRITABLE
registering event source with poller: token=Token(503316483), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(687865863), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(520093699), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(536870915), interests=READABLE | WRITABLE
24' panicked at ':25
registering event source with poller: token=Token(771751938), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301314), interests=READABLE | WRITABLE
deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(553648131), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(939524098), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(167772164), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(184549380), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(570425347), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(587202563), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1660944393), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(805306376), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(603979779), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(704643079), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(620756995), interests=READABLE | WRITABLE
25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(637534211), interests=READABLE | WRITABLE
registering event source with poller: token=Token(788529154), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(973078530), interests=READABLE | WRITABLE
deregistering event source from poller
:24:25
deregistering event source from poller
registering event source with poller: token=Token(654311427), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rsthread ':rocket-worker-thread24' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })25', 
src/./game/utils.rs:deregistering event source from poller
24:25
registering event source with poller: token=Token(956301314), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(201326596), interests=READABLE | WRITABLE
registering event source with poller: token=Token(671088643), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(218103812), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1677721609), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(234881028), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(822083592), interests=READABLE | WRITABLE
registering event source with poller: token=Token(251658244), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })registering event source with poller: token=Token(268435460), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(721420295), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(805306370), interests=READABLE | WRITABLE
registering event source with poller: token=Token(285212676), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(989855746), interests=READABLE | WRITABLE
:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })registering event source with poller: token=Token(301989892), interests=READABLE | WRITABLE
', deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
deregistering event source from poller
src/./game/utils.rs:24:25
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(973078530), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ga")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ga" }registering event source with poller: token=Token(687865859), interests=READABLE | WRITABLE
registering event source with poller: token=Token(318767108), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ga\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ga","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(704643075), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Response succeeded.
registering event source with poller: token=Token(721420291), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1694498825), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(838860808), interests=READABLE | WRITABLE
registering event source with poller: token=Token(738197507), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(738197511), interests=READABLE | WRITABLE
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(754974723), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })deregistering event source from poller
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(771751939), interests=READABLE | WRITABLE
registering event source with poller: token=Token(822083586), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1006632962), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(788529155), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(989855746), interests=READABLE | WRITABLE
thread 'deregistering event source from poller
rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "weg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "weg" }registering event source with poller: token=Token(335544324), interests=READABLE | WRITABLE
registering event source with poller: token=Token(805306371), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"weg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"weg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(352321540), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1711276041), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(369098756), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(855638024), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875972), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(754974727), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(402653188), interests=READABLE | WRITABLE
24:25deregistering event source from poller

thread 'rocket-worker-threadderegistering event source from poller
registering event source with poller: token=Token(838860802), interests=READABLE | WRITABLE
' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24thread 'rocket-worker-thread:registering event source with poller: token=Token(419430404), interests=READABLE | WRITABLE
' panicked at '25
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', deregistering event source from poller
src/./game/utils.rsregistering event source with poller: token=Token(1023410178), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(436207620), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadregistering event source with poller: token=Token(1006632962), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(822083587), interests=READABLE | WRITABLE
registering event source with poller: token=Token(452984836), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
registering event source with poller: token=Token(838860803), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1728053257), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(855638019), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(872415240), interests=READABLE | WRITABLE
registering event source with poller: token=Token(872415235), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(771751943), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(889192451), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'thread 'rocket-worker-threadcalled `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })' panicked at 'registering event source with poller: token=Token(855638018), interests=READABLE | WRITABLE
', called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(905969667), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25registering event source with poller: token=Token(1040187394), interests=READABLE | WRITABLE

registering event source with poller: token=Token(922746883), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1023410178), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
deregistering event source from poller
:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ga")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ga" }registering event source with poller: token=Token(469762052), interests=READABLE | WRITABLE
registering event source with poller: token=Token(939524099), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ga\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ga","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(486539268), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1744830473), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(503316484), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(889192456), interests=READABLE | WRITABLE
registering event source with poller: token=Token(520093700), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(788529159), interests=READABLE | WRITABLE
registering event source with poller: token=Token(536870916), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(872415234), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(553648132), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(570425348), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1056964610), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1040187394), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "weg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "weg" }registering event source with poller: token=Token(956301315), interests=READABLE | WRITABLE
registering event source with poller: token=Token(587202564), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"weg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"weg","visible_type":"All"}
registering event source with poller: token=Token(973078531), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1761607689), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1778384905), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(905969672), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1795162121), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })registering event source with poller: token=Token(805306375), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1811939337), interests=READABLE | WRITABLE
registering event source with poller: token=Token(889192450), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1828716553), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1073741826), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1845493769), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1056964610), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(603979780), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(620756996), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
registering event source with poller: token=Token(1862270985), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855747), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1006632963), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(922746888), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1023410179), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(822083591), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1040187395), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969666), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1056964611), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1090519042), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1073741827), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25registering event source with poller: token=Token(1073741826), interests=READABLE | WRITABLE
deregistering event source from poller

deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ga")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ga" }registering event source with poller: token=Token(637534212), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(654311428), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ga\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ga","visible_type":"All"}
registering event source with poller: token=Token(1090519043), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1107296259), interests=READABLE | WRITABLE
registering event source with poller: token=Token(939524104), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1879048201), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1895825417), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
registering event source with poller: token=Token(1912602633), interests=READABLE | WRITABLE
registering event source with poller: token=Token(838860807), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(922746882), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1929379849), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1946157065), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296258), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })deregistering event source from poller
', deregistering event source from poller
src/./game/utils.rs:24registering event source with poller: token=Token(1090519042), interests=READABLE | WRITABLE
deregistering event source from poller
:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "weg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "weg" }registering event source with poller: token=Token(671088644), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1962934281), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"weg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"weg","visible_type":"All"}
registering event source with poller: token=Token(687865860), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1124073475), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1140850691), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(956301320), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1157627907), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1174405123), interests=READABLE | WRITABLE
registering event source with poller: token=Token(855638023), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
registering event source with poller: token=Token(939524098), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1191182339), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1207959555), interests=READABLE | WRITABLE
24:25
registering event source with poller: token=Token(1124073474), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1107296258), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadthread 'rocket-worker-thread' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', ', src/./game/utils.rssrc/./game/utils.rs::2424::2525

POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(1979711497), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1224736771), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1996488713), interests=READABLE | WRITABLE
registering event source with poller: token=Token(704643076), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2013265929), interests=READABLE | WRITABLE
registering event source with poller: token=Token(973078536), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2030043145), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:registering event source with poller: token=Token(872415239), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
registering event source with poller: token=Token(2046820361), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301314), interests=READABLE | WRITABLE
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(2063597577), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1140850690), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(2080374793), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1124073474), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ga")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ga" }registering event source with poller: token=Token(1241513987), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2097152009), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ga\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ga","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1258291203), interests=READABLE | WRITABLE
registering event source with poller: token=Token(721420292), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1275068419), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1291845635), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855752), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(889192455), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1308622851), interests=READABLE | WRITABLE
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })deregistering event source from poller
thread '', rocket-worker-threadsrc/./game/utils.rs' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })24', :src/./game/utils.rs25:
24:25
registering event source with poller: token=Token(973078530), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1325400067), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1157627906), interests=READABLE | WRITABLE
thread 'rocket-worker-threadregistering event source with poller: token=Token(1342177283), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
deregistering event source from poller
25
thread 'registering event source with poller: token=Token(1140850690), interests=READABLE | WRITABLE
deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "weg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "weg" }registering event source with poller: token=Token(2113929225), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1358954499), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"weg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"weg","visible_type":"All"}
registering event source with poller: token=Token(2130706441), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(738197508), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(754974724), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1006632968), interests=READABLE | WRITABLE
registering event source with poller: token=Token(771751940), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(905969671), interests=READABLE | WRITABLE
thread 'rocket-worker-threadregistering event source with poller: token=Token(788529156), interests=READABLE | WRITABLE
deregistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24thread ':rocket-worker-thread25' panicked at '
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(989855746), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(805306372), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1174405122), interests=READABLE | WRITABLE
registering event source with poller: token=Token(822083588), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1157627906), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "a")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "a" }registering event source with poller: token=Token(1375731715), interests=READABLE | WRITABLE
registering event source with poller: token=Token(838860804), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"a\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"a","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1392508931), interests=READABLE | WRITABLE
registering event source with poller: token=Token(9), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(16777225), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1023410184), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554441), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(922746887), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331657), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1006632962), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108873), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1191182338), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886089), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1174405122), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(855638020), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663305), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(872415236), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(889192452), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1409286147), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1040187400), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969668), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(939524103), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(922746884), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1023410178), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(939524100), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1207959554), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301316), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1191182338), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(117440521), interests=READABLE | WRITABLE
registering event source with poller: token=Token(973078532), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(134217737), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1426063363), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(150994953), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1056964616), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(167772169), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(956301319), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(184549385), interests=READABLE | WRITABLE
rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(201326601), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1040187394), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1224736770), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(218103817), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1207959554), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "look")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "look" }registering event source with poller: token=Token(989855748), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(234881033), interests=READABLE | WRITABLE
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"look\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"look","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1006632964), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1023410180), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1442840579), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1073741832), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1459617795), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(973078535), interests=READABLE | WRITABLE
' panicked at 'registering event source with poller: token=Token(1476395011), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "look", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1056964610), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "look", visible_type: All })registering event source with poller: token=Token(1493172227), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1241513986), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "look", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1509949443), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(1224736770), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "look", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "look", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "you%27re+actually+kind+of+doomed+do+you+know+that%3F")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "you're actually kind of doomed do you know that?" }registering event source with poller: token=Token(251658249), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1526726659), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"you're actually kind of doomed do you know that?\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"you're actually kind of doomed do you know that?","visible_type":"All"}
registering event source with poller: token=Token(268435465), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(285212681), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1040187396), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1090519048), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1056964612), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(989855751), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1073741828), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1073741826), interests=READABLE | WRITABLE
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "you're actually kind of doomed do you know that?", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1090519044), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "you're actually kind of doomed do you know that?", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1258291202), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296260), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "you're actually kind of doomed do you know that?", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24deregistering event source from poller
registering event source with poller: token=Token(1241513986), interests=READABLE | WRITABLE
:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "you're actually kind of doomed do you know that?", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "you're actually kind of doomed do you know that?", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
GET /style.css text/css:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(687865862), interests=READABLE | WRITABLE
registering event source with poller: token=Token(318767118), interests=READABLE | WRITABLE
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(369098767), interests=READABLE | WRITABLE
registering event source with poller: token=Token(436207623), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(301989904), interests=READABLE | WRITABLE
GET /jquery.js:
registering event source with poller: token=Token(704643078), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
GET /nicepage.js:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
GET /reset.css text/css:
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(385875985), interests=READABLE | WRITABLE
registering event source with poller: token=Token(335544334), interests=READABLE | WRITABLE
GET /images/User.jpg image/avif:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(385875983), interests=READABLE | WRITABLE
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(721420294), interests=READABLE | WRITABLE
registering event source with poller: token=Token(452984839), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321550), interests=READABLE | WRITABLE
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Outcome: Success
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(318767120), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(402653201), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(738197510), interests=READABLE | WRITABLE
registering event source with poller: token=Token(335544336), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1543503875), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1124073476), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(1560281091), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(301989897), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1577058307), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Remote left: channel closed.
registering event source with poller: token=Token(1107296264), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1593835523), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25
registering event source with poller: token=Token(1610612739), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1006632967), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1090519042), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1627389955), interests=READABLE | WRITABLE
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:thread 'deregistering event source from poller
rocket-worker-thread24:' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })registering event source with poller: token=Token(1275068418), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1644167171), interests=READABLE | WRITABLE
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at '', src/./game/utils.rscalled `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All }):', 24src/./game/utils.rs::2524
:deregistering event source from poller
registering event source with poller: token=Token(1258291202), interests=READABLE | WRITABLE
25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1140850692), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1660944387), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1157627908), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(318767113), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1174405124), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1124073480), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1191182340), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadregistering event source with poller: token=Token(1023410183), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1207959556), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rsthread 'rocket-worker-thread:' panicked at '24called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All }):', deregistering event source from poller
src/./game/utils.rs25:
24:25
registering event source with poller: token=Token(1224736772), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296258), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1291845634), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1241513988), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1275068418), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(1677721603), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1694498819), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
registering event source with poller: token=Token(1258291204), interests=READABLE | WRITABLE
registering event source with poller: token=Token(335544329), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1275068420), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1140850696), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1291845636), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(1040187399), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1308622852), interests=READABLE | WRITABLE
25
deregistering event source from poller
registering event source with poller: token=Token(1124073474), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1325400068), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'deregistering event source from poller
registering event source with poller: token=Token(1308622850), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1342177284), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadthread '' panicked at 'rocket-worker-threadcalled `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })' panicked at '', called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })src/./game/utils.rsregistering event source with poller: token=Token(1291845634), interests=READABLE | WRITABLE
', :src/./game/utils.rs24::2425:
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "g")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "g" }registering event source with poller: token=Token(1711276035), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1358954500), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"g\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"g","visible_type":"All"}
registering event source with poller: token=Token(1728053251), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(352321545), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(369098761), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1157627912), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(385875977), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25
registering event source with poller: token=Token(402653193), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1056964615), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1140850690), interests=READABLE | WRITABLE
registering event source with poller: token=Token(419430409), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })deregistering event source from poller
', src/./game/utils.rs:24registering event source with poller: token=Token(436207625), interests=READABLE | WRITABLE
:thread 'registering event source with poller: token=Token(1325400066), interests=READABLE | WRITABLE
rocket-worker-thread25' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs
:24:deregistering event source from poller
25deregistering event source from poller
deregistering event source from poller

registering event source with poller: token=Token(1308622850), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "weg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "weg" }registering event source with poller: token=Token(1375731716), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1392508932), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"weg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"weg","visible_type":"All"}
registering event source with poller: token=Token(452984841), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(469762057), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1174405128), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1744830467), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(486539273), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1073741831), interests=READABLE | WRITABLE
registering event source with poller: token=Token(503316489), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1157627906), interests=READABLE | WRITABLE
registering event source with poller: token=Token(520093705), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })registering event source with poller: token=Token(536870921), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1342177282), interests=READABLE | WRITABLE
', src/./game/utils.rs:24deregistering event source from poller
:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1325400066), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Outcome: Success
Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(369098766), interests=READABLE | WRITABLE
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(419430417), interests=READABLE | WRITABLE
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
registering event source with poller: token=Token(402653199), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321552), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(754974726), interests=READABLE | WRITABLE
registering event source with poller: token=Token(469762055), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(385875982), interests=READABLE | WRITABLE
registering event source with poller: token=Token(486539271), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ij")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ij" }registering event source with poller: token=Token(1409286148), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1426063364), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ij\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ij","visible_type":"All"}
registering event source with poller: token=Token(553648137), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(570425353), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1761607683), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1191182344), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(1778384899), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ij", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
registering event source with poller: token=Token(1090519047), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1795162115), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread:' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ij", visible_type: All })', src/./game/utils.rs:25
24registering event source with poller: token=Token(1174405122), interests=READABLE | WRITABLE
deregistering event source from poller
:25registering event source with poller: token=Token(1811939331), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread   >> Remote left: channel closed.
' panicked at '
deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ij", visible_type: All })', src/./game/utils.rs   >> Remote left: channel closed.
registering event source with poller: token=Token(1358954498), interests=READABLE | WRITABLE
:24:registering event source with poller: token=Token(1828716547), interests=READABLE | WRITABLE
25deregistering event source from poller

thread 'deregistering event source from poller
rocket-worker-threadderegistering event source from poller
registering event source with poller: token=Token(1342177282), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ij", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ij", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(1442840580), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1845493763), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
deregistering event source from poller
registering event source with poller: token=Token(1459617796), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(587202569), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(1476395012), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1207959560), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1493172228), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1107296263), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1509949444), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1526726660), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1191182338), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1375731714), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1543503876), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
thread 'registering event source with poller: token=Token(1358954498), interests=READABLE | WRITABLE
deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(1862270979), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1560281092), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1879048195), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979785), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1895825411), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1224736776), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1912602627), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1929379843), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(1124073479), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All }):registering event source with poller: token=Token(1207959554), interests=READABLE | WRITABLE
25registering event source with poller: token=Token(1946157059), interests=READABLE | WRITABLE
', src/./game/utils.rs
:24:25
deregistering event source from poller
registering event source with poller: token=Token(1392508930), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1962934275), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })registering event source with poller: token=Token(1375731714), interests=READABLE | WRITABLE
', deregistering event source from poller
deregistering event source from poller
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
GET /reset.css text/css:
GET /style.css text/css:
   >> Outcome: Success
   >>    >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(402653198), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(771751942), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(419430414), interests=READABLE | WRITABLE
registering event source with poller: token=Token(503316487), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Outcome: Success
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(436207630), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(520093703), interests=READABLE | WRITABLE
   >>    >> Outcome: Success
Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /images/User.jpg image/avif:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "jo")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "jo" }registering event source with poller: token=Token(1577058308), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1979711491), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"jo\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"jo","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1593835524), interests=READABLE | WRITABLE
registering event source with poller: token=Token(620757001), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1610612740), interests=READABLE | WRITABLE
   >>    >> deregistering event source from poller
Remote left: channel closed.
registering event source with poller: token=Token(1241513992), interests=READABLE | WRITABLE
Remote left: channel closed.
registering event source with poller: token=Token(1627389956), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "jo", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(1644167172), interests=READABLE | WRITABLE
25
registering event source with poller: token=Token(1140850695), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1224736770), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "jo", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1660944388), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "jo", visible_type: All })', registering event source with poller: token=Token(1409286146), interests=READABLE | WRITABLE
src/./game/utils.rs:24:registering event source with poller: token=Token(1677721604), interests=READABLE | WRITABLE
25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1392508930), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "jo", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "jo", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(1996488707), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1694498820), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(2013265923), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534217), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(654311433), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1258291208), interests=READABLE | WRITABLE
registering event source with poller: token=Token(671088649), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(687865865), interests=READABLE | WRITABLE
:24:25
registering event source with poller: token=Token(1157627911), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1241513986), interests=READABLE | WRITABLE
registering event source with poller: token=Token(704643081), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadthread '' panicked at 'rocket-worker-threadcalled `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })' panicked at '', registering event source with poller: token=Token(721420297), interests=READABLE | WRITABLE
src/./game/utils.rs:called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })registering event source with poller: token=Token(1426063362), interests=READABLE | WRITABLE
24', src/./game/utils.rs:24:25:
25
registering event source with poller: token=Token(1409286146), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "hhh")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "hhh" }registering event source with poller: token=Token(1711276036), interests=READABLE | WRITABLE
registering event source with poller: token=Token(738197513), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"hhh\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"hhh","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1728053252), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(2030043139), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1744830468), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1275068424), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1761607684), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "hhh", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1778384900), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(1174405127), interests=READABLE | WRITABLE
deregistering event source from poller
24registering event source with poller: token=Token(1258291202), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1795162116), interests=READABLE | WRITABLE
:deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "hhh", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "hhh", visible_type: All })', src/./game/utils.rs:2425:
25
deregistering event source from poller
registering event source with poller: token=Token(1442840578), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1811939332), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadderegistering event source from poller
registering event source with poller: token=Token(1426063362), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "hhh", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "hhh", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(754974729), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(771751945), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
registering event source with poller: token=Token(1828716548), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2046820355), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1845493764), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1291845640), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1862270980), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadregistering event source with poller: token=Token(1191182343), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(1879048196), interests=READABLE | WRITABLE
:25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1275068418), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1895825412), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })registering event source with poller: token=Token(1912602628), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1442840578), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1459617794), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'thread 'rocket-worker-threadrocket-worker-thread' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', ', src/./game/utils.rssrc/./game/utils.rs::2424::2525

POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(788529161), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1929379844), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(805306377), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2063597571), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(822083593), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1308622856), interests=READABLE | WRITABLE
registering event source with poller: token=Token(838860809), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1207959559), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(855638025), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(872415241), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1476395010), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1291845634), interests=READABLE | WRITABLE
registering event source with poller: token=Token(889192457), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'thread 'rocket-worker-threadrocket-worker-thread' panicked at '' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })deregistering event source from poller
', src/./game/utils.rs:registering event source with poller: token=Token(1459617794), interests=READABLE | WRITABLE
', 24src/./game/utils.rs:25:
24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(1946157060), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969673), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1962934276), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(2080374787), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2097152003), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1325400072), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929219), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1224736775), interests=READABLE | WRITABLE
24:25registering event source with poller: token=Token(2130706435), interests=READABLE | WRITABLE

registering event source with poller: token=Token(1308622850), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1493172226), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(16777219), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1476395010), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(922746889), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554435), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(939524105), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(956301321), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1979711492), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1342177288), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(973078537), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })deregistering event source from poller
', registering event source with poller: token=Token(1241513991), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855753), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
src/./game/utils.rs:24registering event source with poller: token=Token(1006632969), interests=READABLE | WRITABLE
thread ':rocket-worker-thread25' panicked at '
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25registering event source with poller: token=Token(1325400066), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1509949442), interests=READABLE | WRITABLE

registering event source with poller: token=Token(1023410185), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadthread 'rocket-worker-thread' panicked at 'deregistering event source from poller
' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', registering event source with poller: token=Token(1493172226), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })src/./game/utils.rs:', 24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })src/./game/utils.rs:24:25
', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(50331651), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1040187401), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(67108867), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1996488708), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(83886083), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1358954504), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663299), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1258291207), interests=READABLE | WRITABLE
registering event source with poller: token=Token(117440515), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1342177282), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(134217731), interests=READABLE | WRITABLE
' panicked at 'deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })src/./game/utils.rs', :registering event source with poller: token=Token(150994947), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25registering event source with poller: token=Token(1526726658), interests=READABLE | WRITABLE

24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1509949442), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(1056964617), interests=READABLE | WRITABLE
registering event source with poller: token=Token(167772163), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
registering event source with poller: token=Token(1073741833), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(2013265924), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2030043140), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1375731720), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2046820356), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1275068423), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2063597572), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1358954498), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2080374788), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1543503874), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2097152004), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1526726658), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(184549379), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929220), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(201326595), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(218103811), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1392508936), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1090519049), interests=READABLE | WRITABLE
registering event source with poller: token=Token(234881027), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1291845639), interests=READABLE | WRITABLE
registering event source with poller: token=Token(251658243), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1375731714), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(268435459), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1560281090), interests=READABLE | WRITABLE
' panicked at 'registering event source with poller: token=Token(285212675), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1543503874), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(2130706436), interests=READABLE | WRITABLE
registering event source with poller: token=Token(301989891), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296265), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(16777220), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1409286152), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554436), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })registering event source with poller: token=Token(1308622855), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(50331652), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1392508930), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108868), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1577058306), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886084), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1560281090), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(318767107), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663300), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(335544323), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1124073481), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321539), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1426063368), interests=READABLE | WRITABLE
registering event source with poller: token=Token(369098755), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(385875971), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', registering event source with poller: token=Token(1325400071), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(402653187), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1409286146), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })deregistering event source from poller
', registering event source with poller: token=Token(1593835522), interests=READABLE | WRITABLE
src/./game/utils.rs:deregistering event source from poller
24:registering event source with poller: token=Token(419430403), interests=READABLE | WRITABLE
25thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
deregistering event source from poller
25
deregistering event source from poller
thread '
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1577058306), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(117440516), interests=READABLE | WRITABLE
registering event source with poller: token=Token(436207619), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(134217732), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1140850697), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1157627913), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1442840584), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1174405129), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
registering event source with poller: token=Token(1342177287), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1191182345), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1426063362), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1207959561), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1610612738), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1224736777), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1593835522), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(452984835), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1241513993), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(469762051), interests=READABLE | WRITABLE
registering event source with poller: token=Token(150994948), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(486539267), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1459617800), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(503316483), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })registering event source with poller: token=Token(1358954503), interests=READABLE | WRITABLE
deregistering event source from poller
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(520093699), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1442840578), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(536870915), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })deregistering event source from poller
', src/./game/utils.rs:24:registering event source with poller: token=Token(1627389954), interests=READABLE | WRITABLE
registering event source with poller: token=Token(553648131), interests=READABLE | WRITABLE
25
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadderegistering event source from poller
registering event source with poller: token=Token(1610612738), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(1258291209), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425347), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
registering event source with poller: token=Token(1275068425), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(1291845641), interests=READABLE | WRITABLE
registering event source with poller: token=Token(167772164), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1476395016), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(184549380), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1375731719), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(201326596), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1459617794), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(218103812), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(1644167170), interests=READABLE | WRITABLE
registering event source with poller: token=Token(234881028), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
registering event source with poller: token=Token(1627389954), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(587202563), interests=READABLE | WRITABLE
registering event source with poller: token=Token(251658244), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(603979779), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1308622857), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(620756995), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1493172232), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534211), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1392508935), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(654311427), interests=READABLE | WRITABLE
25deregistering event source from poller

deregistering event source from poller
thread 'registering event source with poller: token=Token(671088643), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })registering event source with poller: token=Token(1476395010), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(687865859), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', registering event source with poller: token=Token(1660944386), interests=READABLE | WRITABLE
src/./game/utils.rsderegistering event source from poller
:deregistering event source from poller
registering event source with poller: token=Token(1644167170), interests=READABLE | WRITABLE
deregistering event source from poller
24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(268435460), interests=READABLE | WRITABLE
registering event source with poller: token=Token(704643075), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
registering event source with poller: token=Token(285212676), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(301989892), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1325400073), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1509949448), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1342177289), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1409286151), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1358954505), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1493172226), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1375731721), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1677721602), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1392508937), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1660944386), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(721420291), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1409286153), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(738197507), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(318767108), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(754974723), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1526726664), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(771751939), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
registering event source with poller: token=Token(1426063367), interests=READABLE | WRITABLE
registering event source with poller: token=Token(788529155), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1509949442), interests=READABLE | WRITABLE
thread 'rocket-worker-threadregistering event source with poller: token=Token(805306371), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1694498818), interests=READABLE | WRITABLE
' panicked at 'deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(822083587), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
registering event source with poller: token=Token(1677721602), interests=READABLE | WRITABLE
deregistering event source from poller
:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(1426063369), interests=READABLE | WRITABLE
registering event source with poller: token=Token(838860803), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1442840585), interests=READABLE | WRITABLE
registering event source with poller: token=Token(335544324), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1459617801), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1543503880), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1476395017), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadregistering event source with poller: token=Token(1442840583), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1493172233), interests=READABLE | WRITABLE
deregistering event source from poller
thread '' panicked at 'rocket-worker-threadcalled `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })' panicked at '', called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })src/./game/utils.rs', :src/./game/utils.rs24::2425:
25
deregistering event source from poller
registering event source with poller: token=Token(1509949449), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1711276034), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1526726658), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1526726665), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'thread 'rocket-worker-threadcalled `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })' panicked at 'deregistering event source from poller
', called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })deregistering event source from poller
src/./game/utils.rsregistering event source with poller: token=Token(1694498818), interests=READABLE | WRITABLE
', :src/./game/utils.rsderegistering event source from poller
24:25:24thread '
:rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs25:24
:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "h")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "h" }registering event source with poller: token=Token(855638019), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1543503881), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"h\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"h","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(872415235), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(889192451), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321540), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1560281096), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(369098756), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1459617799), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875972), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller
registering event source with poller: token=Token(1543503874), interests=READABLE | WRITABLE

registering event source with poller: token=Token(402653188), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(419430404), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1728053250), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1711276034), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "h", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(452984846), interests=READABLE | WRITABLE
registering event source with poller: token=Token(419430415), interests=READABLE | WRITABLE
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(369098768), interests=READABLE | WRITABLE
registering event source with poller: token=Token(536870919), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /style.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(436207633), interests=READABLE | WRITABLE
registering event source with poller: token=Token(788529158), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(553648135), interests=READABLE | WRITABLE
registering event source with poller: token=Token(452984849), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "k")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "k" }registering event source with poller: token=Token(1560281097), interests=READABLE | WRITABLE
registering event source with poller: token=Token(436207620), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"k\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"k","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1577058313), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969667), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(1593835529), interests=READABLE | WRITABLE
   >> Remote left: channel closed.
deregistering event source from poller
registering event source with poller: token=Token(1577058312), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1610612745), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'registering event source with poller: token=Token(1476395015), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1627389961), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "k", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
registering event source with poller: token=Token(1560281090), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "k", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1644167177), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "k", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1744830466), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "k", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(1660944393), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(1728053250), interests=READABLE | WRITABLE
deregistering event source from poller
25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "k", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(452984836), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1677721609), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(469762052), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(486539268), interests=READABLE | WRITABLE
registering event source with poller: token=Token(922746883), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1593835528), interests=READABLE | WRITABLE
registering event source with poller: token=Token(939524099), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1493172231), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301315), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1577058306), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(973078531), interests=READABLE | WRITABLE
deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24registering event source with poller: token=Token(1761607682), interests=READABLE | WRITABLE
:25
registering event source with poller: token=Token(989855747), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24registering event source with poller: token=Token(1744830466), interests=READABLE | WRITABLE
:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(1694498825), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1006632963), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1711276041), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(503316484), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1728053257), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1610612744), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1744830473), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1509949447), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1761607689), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'thread 'rocket-worker-threadrocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })registering event source with poller: token=Token(1593835522), interests=READABLE | WRITABLE
', ', deregistering event source from poller
src/./game/utils.rs:src/./game/utils.rs:2424deregistering event source from poller
:thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:25:
25
24:25
registering event source with poller: token=Token(1778384905), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1778384898), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1795162121), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', deregistering event source from poller
src/./game/utils.rsregistering event source with poller: token=Token(1761607682), interests=READABLE | WRITABLE
:24deregistering event source from poller
:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(1023410179), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1811939337), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1040187395), interests=READABLE | WRITABLE
registering event source with poller: token=Token(520093700), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1056964611), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1627389960), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1073741827), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1526726663), interests=READABLE | WRITABLE
rocket-worker-threadregistering event source with poller: token=Token(1090519043), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1107296259), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })
', registering event source with poller: token=Token(1610612738), interests=READABLE | WRITABLE
src/./game/utils.rsderegistering event source from poller
registering event source with poller: token=Token(1124073475), interests=READABLE | WRITABLE
:24:25
registering event source with poller: token=Token(1795162114), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1778384898), interests=READABLE | WRITABLE
deregistering event source from poller
rocket-worker-threadderegistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(1828716553), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1140850691), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1845493769), interests=READABLE | WRITABLE
registering event source with poller: token=Token(536870916), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1862270985), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1644167176), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1879048201), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1543503879), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(1895825417), interests=READABLE | WRITABLE

deregistering event source from poller
registering event source with poller: token=Token(1627389954), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1912602633), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1811939330), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1929379849), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1795162114), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(1157627907), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1946157065), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
registering event source with poller: token=Token(1174405123), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(553648132), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1191182339), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1207959555), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1660944392), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1560281095), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(1224736771), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1644167170), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
rocket-worker-threadthread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })thread 'rocket-worker-thread', ' panicked at 'registering event source with poller: token=Token(1241513987), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })src/./game/utils.rs', src/./game/utils.rs:24:24:25
deregistering event source from poller
registering event source with poller: token=Token(1258291203), interests=READABLE | WRITABLE
:25
deregistering event source from poller
registering event source with poller: token=Token(1828716546), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1811939330), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(1962934281), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1275068419), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1979711497), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425348), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1996488713), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1677721608), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2013265929), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1577058311), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2030043145), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })deregistering event source from poller
registering event source with poller: token=Token(1660944386), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(2046820361), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1845493762), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(2063597577), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1828716546), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(1291845635), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2080374793), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}")   >> {"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
Outcome: Success
registering event source with poller: token=Token(1308622851), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(1325400067), interests=READABLE | WRITABLE
registering event source with poller: token=Token(587202564), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1694498824), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(1342177283), interests=READABLE | WRITABLE
25
registering event source with poller: token=Token(1593835527), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1358954499), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1677721602), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', registering event source with poller: token=Token(1375731715), interests=READABLE | WRITABLE
src/./game/utils.rs:deregistering event source from poller
24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24:25registering event source with poller: token=Token(1862270978), interests=READABLE | WRITABLE

registering event source with poller: token=Token(1392508931), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1845493762), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(2097152009), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1409286147), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(2113929225), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979780), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2130706441), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1711276040), interests=READABLE | WRITABLE
registering event source with poller: token=Token(9), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1610612743), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(16777225), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(1694498818), interests=READABLE | WRITABLE

deregistering event source from poller
registering event source with poller: token=Token(33554441), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24:registering event source with poller: token=Token(1879048194), interests=READABLE | WRITABLE
25
registering event source with poller: token=Token(50331657), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1862270978), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(1426063363), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108873), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1442840579), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(620756996), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1459617795), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(637534212), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1728053256), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1627389959), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(654311428), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', registering event source with poller: token=Token(1711276034), interests=READABLE | WRITABLE
src/./game/utils.rsderegistering event source from poller
:24:25
deregistering event source from poller
registering event source with poller: token=Token(671088644), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(687865860), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1895825410), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1879048194), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(83886089), interests=READABLE | WRITABLE
registering event source with poller: token=Token(704643076), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(100663305), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(117440521), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1476395011), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1744830472), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1493172227), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1509949443), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1644167175), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1526726659), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1728053250), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1912602626), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1543503875), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'thread 'rocket-worker-threadcalled `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })' panicked at '', called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rssrc/./game/utils.rsderegistering event source from poller
deregistering event source from poller
::2424:25
:25
registering event source with poller: token=Token(1895825410), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "jj")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "jj" }registering event source with poller: token=Token(721420292), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(738197508), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"jj\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"jj","visible_type":"All"}
registering event source with poller: token=Token(1560281091), interests=READABLE | WRITABLE
registering event source with poller: token=Token(134217737), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(150994953), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1761607688), interests=READABLE | WRITABLE
registering event source with poller: token=Token(167772169), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "jj", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:registering event source with poller: token=Token(1660944391), interests=READABLE | WRITABLE
25
registering event source with poller: token=Token(184549385), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "jj", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(201326601), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1744830466), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1929379842), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(218103817), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "jj", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'registering event source with poller: token=Token(1912602626), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "jj", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24deregistering event source from poller
:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "jj", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(385875984), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(570425351), interests=READABLE | WRITABLE
registering event source with poller: token=Token(754974724), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(587202567), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(234881033), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(603979783), interests=READABLE | WRITABLE
   >> Remote left: channel closed.
deregistering event source from poller
registering event source with poller: token=Token(1778384904), interests=READABLE | WRITABLE
registering event source with poller: token=Token(620756999), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1677721607), interests=READABLE | WRITABLE
thread 'rocket-worker-threadregistering event source with poller: token=Token(637534215), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(654311431), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1761607682), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rsderegistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(671088647), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24::2425:
25registering event source with poller: token=Token(1946157058), interests=READABLE | WRITABLE

registering event source with poller: token=Token(1929379842), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(771751940), interests=READABLE | WRITABLE
registering event source with poller: token=Token(687865863), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(788529156), interests=READABLE | WRITABLE
   >> deregistering event source from poller
Response succeeded.
registering event source with poller: token=Token(805306372), interests=READABLE | WRITABLE
registering event source with poller: token=Token(251658249), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1795162120), interests=READABLE | WRITABLE
registering event source with poller: token=Token(268435465), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1694498823), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(285212681), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1778384898), interests=READABLE | WRITABLE
registering event source with poller: token=Token(301989897), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(318767113), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })registering event source with poller: token=Token(1962934274), interests=READABLE | WRITABLE
', deregistering event source from poller
registering event source with poller: token=Token(1946157058), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
src/./game/utils.rs:24deregistering event source from poller
thread ':25rocket-worker-thread
' panicked at 'thread 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })rocket-worker-thread', ' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:src/./game/utils.rs:24:24:2525

POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aw" }registering event source with poller: token=Token(704643079), interests=READABLE | WRITABLE
registering event source with poller: token=Token(335544329), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aw","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(721420295), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(738197511), interests=READABLE | WRITABLE
registering event source with poller: token=Token(822083588), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1811939336), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(754974727), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
registering event source with poller: token=Token(1711276039), interests=READABLE | WRITABLE
registering event source with poller: token=Token(771751943), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1795162114), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(788529159), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:thread 'deregistering event source from poller
rocket-worker-thread25
' panicked at 'registering event source with poller: token=Token(1979711490), interests=READABLE | WRITABLE
registering event source with poller: token=Token(805306375), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', registering event source with poller: token=Token(1962934274), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
registering event source with poller: token=Token(469762065), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
registering event source with poller: token=Token(805306374), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >>    >> Outcome: Success
Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "weg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "weg" }registering event source with poller: token=Token(352321545), interests=READABLE | WRITABLE
registering event source with poller: token=Token(822083591), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"weg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"weg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(369098761), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(838860804), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(385875977), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1828716552), interests=READABLE | WRITABLE
   >> Remote left: channel closed.
registering event source with poller: token=Token(402653193), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1728053255), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(419430409), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(436207625), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1811939330), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1996488706), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(452984841), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
deregistering event source from poller
:25
registering event source with poller: token=Token(1979711490), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "a")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "a" }registering event source with poller: token=Token(838860807), interests=READABLE | WRITABLE
registering event source with poller: token=Token(469762057), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"a\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"a","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(855638023), interests=READABLE | WRITABLE
registering event source with poller: token=Token(855638020), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(872415239), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1845493768), interests=READABLE | WRITABLE
registering event source with poller: token=Token(889192455), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1744830471), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', registering event source with poller: token=Token(905969671), interests=READABLE | WRITABLE
src/./game/utils.rs:deregistering event source from poller
24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1828716546), interests=READABLE | WRITABLE
:24registering event source with poller: token=Token(922746887), interests=READABLE | WRITABLE
:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2013265922), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(939524103), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1996488706), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(402653200), interests=READABLE | WRITABLE
GET /Room.css text/css:
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(469762062), interests=READABLE | WRITABLE
registering event source with poller: token=Token(486539273), interests=READABLE | WRITABLE
GET /Room.js:
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(503316489), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(486539278), interests=READABLE | WRITABLE
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
registering event source with poller: token=Token(822083590), interests=READABLE | WRITABLE
registering event source with poller: token=Token(486539281), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(503316497), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(520093705), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >>    >>    >> Response succeeded.
   >> Response succeeded.
Response succeeded.
Response succeeded.
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(419430416), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(520093713), interests=READABLE | WRITABLE
GET /nicepage.js:
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /images/User.jpg image/avif:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(536870929), interests=READABLE | WRITABLE
registering event source with poller: token=Token(536870921), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "agwg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "agwg" }registering event source with poller: token=Token(956301319), interests=READABLE | WRITABLE
registering event source with poller: token=Token(872415236), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"agwg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"agwg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(973078535), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(989855751), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1577058307), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1862270984), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1006632967), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Remote left: channel closed.
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "agwg", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24:25
registering event source with poller: token=Token(1761607687), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1023410183), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1845493762), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "agwg", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
registering event source with poller: token=Token(1040187399), interests=READABLE | WRITABLE
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "agwg", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(2030043138), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1056964615), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'registering event source with poller: token=Token(2013265922), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "agwg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "agwg", visible_type: All })', src/./game/utils.rs:24:25
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(553648145), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(838860806), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(855638022), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(503316494), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
GET /playerInfo/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(889192452), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(905969668), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
registering event source with poller: token=Token(1073741831), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1090519047), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1593835523), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1879048200), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296263), interests=READABLE | WRITABLE
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1124073479), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })registering event source with poller: token=Token(1778384903), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1862270978), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1140850695), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })thread '', rocket-worker-threadsrc/./game/utils.rs' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })24', registering event source with poller: token=Token(1157627911), interests=READABLE | WRITABLE
src/./game/utils.rs:25
deregistering event source from poller
deregistering event source from poller
:registering event source with poller: token=Token(2046820354), interests=READABLE | WRITABLE
24:25
registering event source with poller: token=Token(2030043138), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "j")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "j" }registering event source with poller: token=Token(922746884), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1174405127), interests=READABLE | WRITABLE
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"j\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"j","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(939524100), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1610612739), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(956301316), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1895825416), interests=READABLE | WRITABLE
registering event source with poller: token=Token(973078532), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1795162119), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855748), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1879048194), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', registering event source with poller: token=Token(1006632964), interests=READABLE | WRITABLE
src/./game/utils.rsderegistering event source from poller
:24:25
thread 'rocket-worker-threadregistering event source with poller: token=Token(2063597570), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1023410180), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2046820354), interests=READABLE | WRITABLE
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "j", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(872415238), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >>    >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(553648137), interests=READABLE | WRITABLE
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(436207631), interests=READABLE | WRITABLE
registering event source with poller: token=Token(889192454), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "fgy")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "fgy" }registering event source with poller: token=Token(1191182343), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1040187396), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"fgy\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"fgy","visible_type":"All"}
registering event source with poller: token=Token(1207959559), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1627389955), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1644167171), interests=READABLE | WRITABLE
   >> Remote left: channel closed.
deregistering event source from poller
registering event source with poller: token=Token(1912602632), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1660944387), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "fgy", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(1677721603), interests=READABLE | WRITABLE

deregistering event source from poller
registering event source with poller: token=Token(1811939335), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1694498819), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "fgy", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1895825410), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1711276035), interests=READABLE | WRITABLE
24registering event source with poller: token=Token(2080374786), interests=READABLE | WRITABLE
:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "fgy", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(2063597570), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "fgy", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "fgy", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(905969670), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(520093710), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(570425353), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425361), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1056964612), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1728053251), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1073741828), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(1090519044), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1224736775), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1929379848), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1241513991), interests=READABLE | WRITABLE
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1828716551), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })registering event source with poller: token=Token(1258291207), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1912602626), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1275068423), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })registering event source with poller: token=Token(2097152002), interests=READABLE | WRITABLE
', registering event source with poller: token=Token(1291845639), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25deregistering event source from poller
registering event source with poller: token=Token(2080374786), interests=READABLE | WRITABLE

deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadthread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> GET /reset.css text/css:
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >>    >> Response succeeded.
Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(587202577), interests=READABLE | WRITABLE
registering event source with poller: token=Token(587202569), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Outcome: Success
Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "AWEG")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "AWEG" }registering event source with poller: token=Token(1744830467), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1308622855), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"AWEG\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"AWEG","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1761607683), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296260), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1124073476), interests=READABLE | WRITABLE
   >> Remote left: channel closed.
deregistering event source from poller
registering event source with poller: token=Token(1946157064), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1140850692), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1845493767), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "AWEG", visible_type: All })registering event source with poller: token=Token(1157627908), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1929379842), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "AWEG", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1174405124), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "AWEG", visible_type: All })registering event source with poller: token=Token(1191182340), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929218), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(2097152002), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "AWEG", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "AWEG", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "AWE")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "AWE" }registering event source with poller: token=Token(1325400071), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1342177287), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"AWE\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"AWE","visible_type":"All"}
registering event source with poller: token=Token(1207959556), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1778384899), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1224736772), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1962934280), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1241513988), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1862270983), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(1258291204), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "AWE", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "AWE", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1946157058), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1275068420), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "AWE", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(2130706434), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1291845636), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(2113929218), interests=READABLE | WRITABLE
rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "AWE", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "AWE", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(603979785), interests=READABLE | WRITABLE
registering event source with poller: token=Token(536870926), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(436207632), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(603979793), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Matched: (events) GET /message/event
   >> Outcome: Success
   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1358954503), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1308622852), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1375731719), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1795162115), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1392508935), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Remote left: channel closed.
registering event source with poller: token=Token(1979711496), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1409286151), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1879048199), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1426063367), interests=READABLE | WRITABLE
24:25deregistering event source from poller

deregistering event source from poller
registering event source with poller: token=Token(1442840583), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1962934274), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(2), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', registering event source with poller: token=Token(1459617799), interests=READABLE | WRITABLE
src/./game/utils.rsderegistering event source from poller
:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(2130706434), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(620757009), interests=READABLE | WRITABLE
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(452984847), interests=READABLE | WRITABLE
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(620757001), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(553648142), interests=READABLE | WRITABLE
GET /reset.css text/css:
GET /style.css text/css:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
registering event source with poller: token=Token(922746886), interests=READABLE | WRITABLE
GET /nicepage.js:
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(452984848), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1325400068), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(469762064), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(486539280), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1476395015), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1996488712), interests=READABLE | WRITABLE
registering event source with poller: token=Token(503316496), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread   >> Remote left: channel closed.
' panicked at 'registering event source with poller: token=Token(1895825415), interests=READABLE | WRITABLE
deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(520093712), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1979711490), interests=READABLE | WRITABLE
registering event source with poller: token=Token(536870928), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(16777218), interests=READABLE | WRITABLE
registering event source with poller: token=Token(553648144), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "a")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "a" }registering event source with poller: token=Token(1342177284), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1358954500), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"a\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"a","visible_type":"All"}
registering event source with poller: token=Token(570425360), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(587202576), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2013265928), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979792), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1493172231), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1912602631), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(620757008), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1996488706), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534224), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(654311440), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(16777218), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(1375731716), interests=READABLE | WRITABLE
registering event source with poller: token=Token(671088656), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
registering event source with poller: token=Token(1392508932), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1509949447), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1409286148), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2030043144), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1426063364), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:25
registering event source with poller: token=Token(1929379847), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1442840580), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1459617796), interests=READABLE | WRITABLE
' panicked at 'deregistering event source from poller
registering event source with poller: token=Token(1476395012), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2013265922), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(50331650), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aw" }registering event source with poller: token=Token(687865872), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1493172228), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aw","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(704643088), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1526726663), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(721420304), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2046820360), interests=READABLE | WRITABLE
registering event source with poller: token=Token(738197520), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25registering event source with poller: token=Token(1946157063), interests=READABLE | WRITABLE

registering event source with poller: token=Token(754974736), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(771751952), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(2030043138), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(67108866), interests=READABLE | WRITABLE
registering event source with poller: token=Token(788529168), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(50331650), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(1509949444), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1526726660), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
registering event source with poller: token=Token(805306384), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1543503879), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(822083600), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2063597576), interests=READABLE | WRITABLE
registering event source with poller: token=Token(838860816), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1962934279), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(855638032), interests=READABLE | WRITABLE

deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', registering event source with poller: token=Token(872415248), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2046820354), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(83886082), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })registering event source with poller: token=Token(889192464), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(67108866), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aw" }registering event source with poller: token=Token(1543503876), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969680), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aw","visible_type":"All"}
registering event source with poller: token=Token(1560281092), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1560281095), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1577058308), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2080374792), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1593835524), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1979711495), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1610612740), interests=READABLE | WRITABLE
deregistering event source from poller
24:thread '25rocket-worker-thread
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
registering event source with poller: token=Token(2063597570), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1627389956), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(100663298), interests=READABLE | WRITABLE
:deregistering event source from poller
25
deregistering event source from poller
registering event source with poller: token=Token(1644167172), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(83886082), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(922746896), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1660944388), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(939524112), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1577058311), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1593835527), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2097152008), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1610612743), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })registering event source with poller: token=Token(1996488711), interests=READABLE | WRITABLE
', src/./game/utils.rsregistering event source with poller: token=Token(1627389959), interests=READABLE | WRITABLE
:deregistering event source from poller
24deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', registering event source with poller: token=Token(2080374786), interests=READABLE | WRITABLE
src/./game/utils.rs:24registering event source with poller: token=Token(1644167175), interests=READABLE | WRITABLE
::2525

deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(117440514), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })registering event source with poller: token=Token(1660944391), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(100663298), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aw" }registering event source with poller: token=Token(1677721604), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1677721607), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aw","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1694498820), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301328), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1711276036), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1728053252), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929224), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2013265927), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1744830468), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })deregistering event source from poller
', src/./game/utils.rs:24:deregistering event source from poller
thread 'rocket-worker-thread25' panicked at '
registering event source with poller: token=Token(2097152002), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })registering event source with poller: token=Token(1761607684), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1778384900), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(134217730), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(117440514), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "e")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "e" }registering event source with poller: token=Token(1694498823), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1795162116), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"e\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"e","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1711276039), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(973078544), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1728053255), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2130706440), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1744830471), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2030043143), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1761607687), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e", visible_type: All })', deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(2113929218), interests=READABLE | WRITABLE
src/./game/utils.rs24:24:25
registering event source with poller: token=Token(1778384903), interests=READABLE | WRITABLE
deregistering event source from poller
:25
thread 'rocket-worker-threadderegistering event source from poller
registering event source with poller: token=Token(150994946), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1795162119), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24deregistering event source from poller
:25registering event source with poller: token=Token(134217730), interests=READABLE | WRITABLE

deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gaw" }registering event source with poller: token=Token(1811939332), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1811939335), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gaw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gaw","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1828716548), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855760), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1845493764), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(8), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1862270980), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2046820359), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(1879048196), interests=READABLE | WRITABLE
rocket-worker-threadderegistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2130706434), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })registering event source with poller: token=Token(1895825412), interests=READABLE | WRITABLE
', deregistering event source from poller
src/./game/utils.rs:thread 'rocket-worker-thread24' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })thread '', rocket-worker-threadsrc/./game/utils.rs' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })24', :src/./game/utils.rsderegistering event source from poller
25registering event source with poller: token=Token(167772162), interests=READABLE | WRITABLE
:24:2525

registering event source with poller: token=Token(1912602628), interests=READABLE | WRITABLE

deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', deregistering event source from poller
src/./game/utils.rsderegistering event source from poller
:24:25
registering event source with poller: token=Token(150994946), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "e")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "e" }registering event source with poller: token=Token(1828716551), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1929379844), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"e\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"e","visible_type":"All"}
registering event source with poller: token=Token(1845493767), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1006632976), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1862270983), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(16777224), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1879048199), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2063597575), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1895825415), interests=READABLE | WRITABLE
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e", visible_type: All })', thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e", visible_type: All })src/./game/utils.rs', src/./game/utils.rs:24:25
registering event source with poller: token=Token(2), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
:24:thread '25rocket-worker-thread
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1912602631), interests=READABLE | WRITABLE
24:25
registering event source with poller: token=Token(184549378), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1929379847), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(167772162), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "e", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "wa")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "wa" }registering event source with poller: token=Token(1946157060), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1946157063), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"wa\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"wa","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1962934276), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1979711492), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1023410192), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(33554440), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1040187408), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "wa", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(2080374791), interests=READABLE | WRITABLE
25
registering event source with poller: token=Token(1056964624), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "wa", visible_type: All })', registering event source with poller: token=Token(16777218), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
registering event source with poller: token=Token(1073741840), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(201326594), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "wa", visible_type: All })registering event source with poller: token=Token(1090519056), interests=READABLE | WRITABLE
deregistering event source from poller
', src/./game/utils.rs:24thread ':rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "wa", visible_type: All })deregistering event source from poller
25', deregistering event source from poller

src/./game/utils.rs:24:25
registering event source with poller: token=Token(184549378), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "wa", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "g")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "g" }registering event source with poller: token=Token(1962934279), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296272), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"g\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"g","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1979711495), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1996488708), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1996488711), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(50331656), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2013265927), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(2097152007), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2030043143), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'registering event source with poller: token=Token(2046820359), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })deregistering event source from poller
', src/./game/utils.rs:registering event source with poller: token=Token(33554434), interests=READABLE | WRITABLE
24registering event source with poller: token=Token(2063597575), interests=READABLE | WRITABLE
:25
deregistering event source from poller
registering event source with poller: token=Token(218103810), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })thread 'registering event source with poller: token=Token(201326594), interests=READABLE | WRITABLE
deregistering event source from poller
', rocket-worker-threadsrc/./game/utils.rs' panicked at ':24:25called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', 
deregistering event source from poller
src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "we")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "we" }registering event source with poller: token=Token(1124073488), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2080374791), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"we\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"we","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1140850704), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1157627920), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2013265924), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108872), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1174405136), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1191182352), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929223), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(50331650), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1207959568), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:thread '24rocket-worker-thread:' panicked at '25called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(234881026), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1224736784), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', registering event source with poller: token=Token(218103810), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ga")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ga" }registering event source with poller: token=Token(2097152007), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1241514000), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ga\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ga","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(2113929223), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(2030043140), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2130706439), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(7), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886088), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(2130706439), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(16777223), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(67108866), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554439), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(251658242), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331655), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(234881026), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "we")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "we" }registering event source with poller: token=Token(1258291216), interests=READABLE | WRITABLE
registering event source with poller: token=Token(67108871), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"we\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"we","visible_type":"All"}
registering event source with poller: token=Token(1275068432), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(1291845648), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2046820356), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(100663304), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2063597572), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(2080374788), interests=READABLE | WRITABLE
24:registering event source with poller: token=Token(7), interests=READABLE | WRITABLE
25
deregistering event source from poller
registering event source with poller: token=Token(2097152004), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886082), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rsderegistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
:24:25
deregistering event source from poller
registering event source with poller: token=Token(268435458), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929220), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(251658242), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ga")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ga" }registering event source with poller: token=Token(83886087), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(100663303), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ga\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ga","visible_type":"All"}
registering event source with poller: token=Token(2130706436), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1308622864), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1325400080), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(117440520), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1342177296), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(1358954512), interests=READABLE | WRITABLE

registering event source with poller: token=Token(16777223), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(100663298), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1375731728), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })deregistering event source from poller
', src/./game/utils.rsderegistering event source from poller
registering event source with poller: token=Token(285212674), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(1392508944), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })registering event source with poller: token=Token(268435458), interests=READABLE | WRITABLE
deregistering event source from poller
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "we")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "we" }registering event source with poller: token=Token(117440519), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1409286160), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"we\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"we","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(134217735), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(150994951), interests=READABLE | WRITABLE
registering event source with poller: token=Token(134217736), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
registering event source with poller: token=Token(167772167), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(33554439), interests=READABLE | WRITABLE
registering event source with poller: token=Token(184549383), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(117440514), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326599), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(301989890), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(218103815), interests=READABLE | WRITABLE
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(285212674), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ga")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ga" }registering event source with poller: token=Token(1426063376), interests=READABLE | WRITABLE
registering event source with poller: token=Token(234881031), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ga\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ga","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1442840592), interests=READABLE | WRITABLE
registering event source with poller: token=Token(16777220), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(33554436), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(150994952), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331652), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(50331655), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(67108868), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
src/./game/utils.rs:24:25
registering event source with poller: token=Token(134217730), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886084), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(318767106), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(100663300), interests=READABLE | WRITABLE

deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:deregistering event source from poller
24:registering event source with poller: token=Token(301989890), interests=READABLE | WRITABLE
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "we")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "we" }registering event source with poller: token=Token(251658247), interests=READABLE | WRITABLE
registering event source with poller: token=Token(117440516), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"we\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"we","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(268435463), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1459617808), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1476395024), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(167772168), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1493172240), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(67108871), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1509949456), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(150994946), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1526726672), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(335544322), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1543503888), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(318767106), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "g")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "g" }registering event source with poller: token=Token(134217732), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(150994948), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"g\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"g","visible_type":"All"}
registering event source with poller: token=Token(1560281104), interests=READABLE | WRITABLE
registering event source with poller: token=Token(285212679), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(301989895), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(318767111), interests=READABLE | WRITABLE
registering event source with poller: token=Token(184549384), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(83886087), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(335544327), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', registering event source with poller: token=Token(352321543), interests=READABLE | WRITABLE
registering event source with poller: token=Token(167772162), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(352321538), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })deregistering event source from poller
', src/./game/utils.rsregistering event source with poller: token=Token(369098759), interests=READABLE | WRITABLE
:24thread 'rocket-worker-thread:' panicked at '25called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })
', src/./game/utils.rsderegistering event source from poller
:24:deregistering event source from poller
25
registering event source with poller: token=Token(335544322), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "g")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "g" }registering event source with poller: token=Token(167772164), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875975), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"g\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"g","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(184549380), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1577058320), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(201326596), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(201326600), interests=READABLE | WRITABLE
registering event source with poller: token=Token(218103812), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(100663303), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(234881028), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(251658244), interests=READABLE | WRITABLE

registering event source with poller: token=Token(184549378), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(369098754), interests=READABLE | WRITABLE
rocket-worker-threadregistering event source with poller: token=Token(268435460), interests=READABLE | WRITABLE
' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rsthread ':rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24registering event source with poller: token=Token(352321538), interests=READABLE | WRITABLE
deregistering event source from poller
:25
24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(402653191), interests=READABLE | WRITABLE
registering event source with poller: token=Token(285212676), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(419430407), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1593835536), interests=READABLE | WRITABLE
registering event source with poller: token=Token(436207623), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(218103816), interests=READABLE | WRITABLE
registering event source with poller: token=Token(452984839), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(117440519), interests=READABLE | WRITABLE
registering event source with poller: token=Token(469762055), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(486539271), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326594), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25registering event source with poller: token=Token(385875970), interests=READABLE | WRITABLE

deregistering event source from poller
registering event source with poller: token=Token(503316487), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'deregistering event source from poller
registering event source with poller: token=Token(369098754), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "g")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "g" }registering event source with poller: token=Token(301989892), interests=READABLE | WRITABLE
registering event source with poller: token=Token(520093703), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"g\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"g","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(318767108), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1610612752), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(335544324), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(234881032), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321540), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(369098756), interests=READABLE | WRITABLE
25
registering event source with poller: token=Token(134217735), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(218103810), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875972), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(402653186), interests=READABLE | WRITABLE
24:25
registering event source with poller: token=Token(402653188), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
registering event source with poller: token=Token(385875970), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aw" }registering event source with poller: token=Token(536870919), interests=READABLE | WRITABLE
registering event source with poller: token=Token(419430404), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aw","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(553648135), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1627389968), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1644167184), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(251658248), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1660944400), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(150994951), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1677721616), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(234881026), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1694498832), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(419430402), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(1711276048), interests=READABLE | WRITABLE
25
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(402653186), interests=READABLE | WRITABLE
' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(436207620), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1728053264), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(452984836), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425351), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(469762052), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(268435464), interests=READABLE | WRITABLE
registering event source with poller: token=Token(486539268), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(167772167), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
registering event source with poller: token=Token(503316484), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(251658242), interests=READABLE | WRITABLE
registering event source with poller: token=Token(520093700), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(436207618), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(536870916), interests=READABLE | WRITABLE
:25
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', registering event source with poller: token=Token(419430402), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "a")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "a" }registering event source with poller: token=Token(1744830480), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1761607696), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"a\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"a","visible_type":"All"}
registering event source with poller: token=Token(553648132), interests=READABLE | WRITABLE
registering event source with poller: token=Token(587202567), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(603979783), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(285212680), interests=READABLE | WRITABLE
registering event source with poller: token=Token(620756999), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', registering event source with poller: token=Token(184549383), interests=READABLE | WRITABLE
src/./game/utils.rs:24registering event source with poller: token=Token(637534215), interests=READABLE | WRITABLE
:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(268435458), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(654311431), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(452984834), interests=READABLE | WRITABLE
rocket-worker-threadregistering event source with poller: token=Token(671088647), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(436207618), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(1778384912), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1795162128), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
registering event source with poller: token=Token(687865863), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(704643079), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425348), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(301989896), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(721420295), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(201326599), interests=READABLE | WRITABLE
registering event source with poller: token=Token(738197511), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(285212674), interests=READABLE | WRITABLE
registering event source with poller: token=Token(754974727), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(469762050), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(771751943), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })deregistering event source from poller
registering event source with poller: token=Token(452984834), interests=READABLE | WRITABLE
', deregistering event source from poller
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "a")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "a" }registering event source with poller: token=Token(1811939344), interests=READABLE | WRITABLE
registering event source with poller: token=Token(788529159), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"a\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"a","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1828716560), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(587202564), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1845493776), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(318767112), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1862270992), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })registering event source with poller: token=Token(218103815), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1879048208), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(301989890), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1895825424), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(486539266), interests=READABLE | WRITABLE

registering event source with poller: token=Token(1912602640), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(469762050), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "a", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "we")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "we" }registering event source with poller: token=Token(805306375), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1929379856), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"we\",\"visible_type\":\"All\"}")Outcome: Success
{"room_name":"rustkill","username":"guest","message":"we","visible_type":"All"}
registering event source with poller: token=Token(822083591), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(838860807), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979780), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(335544328), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(855638023), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })registering event source with poller: token=Token(234881031), interests=READABLE | WRITABLE
', registering event source with poller: token=Token(872415239), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(318767106), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', registering event source with poller: token=Token(889192455), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(503316482), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(905969671), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(486539266), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ga")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ga" }registering event source with poller: token=Token(1946157072), interests=READABLE | WRITABLE
registering event source with poller: token=Token(922746887), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ga\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ga","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1962934288), interests=READABLE | WRITABLE
registering event source with poller: token=Token(620756996), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(637534212), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(352321544), interests=READABLE | WRITABLE
registering event source with poller: token=Token(654311428), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(251658247), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(671088644), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(687865860), interests=READABLE | WRITABLE
registering event source with poller: token=Token(335544322), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(520093698), interests=READABLE | WRITABLE
thread 'rocket-worker-threadregistering event source with poller: token=Token(704643076), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(503316482), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "we")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "we" }registering event source with poller: token=Token(939524103), interests=READABLE | WRITABLE
registering event source with poller: token=Token(721420292), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"we\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"we","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(956301319), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1979711504), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(973078535), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(369098760), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855751), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(268435463), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1006632967), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25
deregistering event source from poller
registering event source with poller: token=Token(1023410183), interests=READABLE | WRITABLE
registering event source with poller: token=Token(352321538), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(536870914), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1040187399), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(520093698), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "we")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "we" }registering event source with poller: token=Token(738197508), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1056964615), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"we\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"we","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(754974724), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1996488720), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(771751940), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(788529156), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875976), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(805306372), interests=READABLE | WRITABLE
registering event source with poller: token=Token(285212679), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(369098754), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'registering event source with poller: token=Token(822083588), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(553648130), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(838860804), interests=READABLE | WRITABLE
:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(536870914), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "we", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ga")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ga" }registering event source with poller: token=Token(1073741831), interests=READABLE | WRITABLE
registering event source with poller: token=Token(855638020), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ga\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ga","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1090519047), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2013265936), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2030043152), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(402653192), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2046820368), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:registering event source with poller: token=Token(301989895), interests=READABLE | WRITABLE
25
registering event source with poller: token=Token(2063597584), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(385875970), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', registering event source with poller: token=Token(2080374800), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(570425346), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(2097152016), interests=READABLE | WRITABLE
:25
registering event source with poller: token=Token(553648130), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "g")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "g" }registering event source with poller: token=Token(872415236), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929232), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"g\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"g","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(889192452), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(905969668), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296263), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(419430408), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1124073479), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(318767111), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1140850695), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(402653186), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1157627911), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadregistering event source with poller: token=Token(587202562), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1174405127), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(570425346), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(2130706448), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1191182343), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(16), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(922746884), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(939524100), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(436207624), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301316), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(335544327), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(973078532), interests=READABLE | WRITABLE
thread 'deregistering event source from poller
rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', thread 'src/./game/utils.rsrocket-worker-thread:' panicked at '24called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })registering event source with poller: token=Token(989855748), interests=READABLE | WRITABLE
:', 25src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(419430402), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1006632964), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979778), interests=READABLE | WRITABLE

deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(587202562), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', thread 'src/./game/utils.rsrocket-worker-thread:' panicked at '24called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All }):', 25src/./game/utils.rs
:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "ga")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "ga" }registering event source with poller: token=Token(1207959559), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1023410180), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"ga\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"ga","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1224736775), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(16777232), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1241513991), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(452984840), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1258291207), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(352321543), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1275068423), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(436207618), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })registering event source with poller: token=Token(1291845639), interests=READABLE | WRITABLE
', deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1308622855), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
thread 'registering event source with poller: token=Token(620756994), interests=READABLE | WRITABLE
rocket-worker-threadderegistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(603979778), interests=READABLE | WRITABLE
thread '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', rocket-worker-threadsrc/./game/utils.rs' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', 24src/./game/utils.rsderegistering event source from poller
::2524
:thread 'rocket-worker-thread25' panicked at '
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "ga", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gwa")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gwa" }registering event source with poller: token=Token(1040187396), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1056964612), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gwa\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gwa","visible_type":"All"}
registering event source with poller: token=Token(1325400071), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1342177287), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(33554448), interests=READABLE | WRITABLE
registering event source with poller: token=Token(469762056), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1358954503), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gwa", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(369098759), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1375731719), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gwa", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(452984834), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1392508935), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gwa", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
registering event source with poller: token=Token(1409286151), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534210), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gwa", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(620756994), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gwa", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(1073741828), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1090519044), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
registering event source with poller: token=Token(1426063367), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331664), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(67108880), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(83886096), interests=READABLE | WRITABLE
registering event source with poller: token=Token(486539272), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(385875975), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663312), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(117440528), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
registering event source with poller: token=Token(469762050), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:deregistering event source from poller
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })registering event source with poller: token=Token(134217744), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(654311426), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534210), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'thread 'rocket-worker-threadrocket-worker-thread' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', ', src/./game/utils.rssrc/./game/utils.rs::2424::2525

POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aw" }registering event source with poller: token=Token(1107296260), interests=READABLE | WRITABLE
registering event source with poller: token=Token(150994960), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aw","visible_type":"All"}
registering event source with poller: token=Token(1124073476), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1442840583), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1140850692), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(503316488), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1157627908), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(1174405124), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(402653191), interests=READABLE | WRITABLE
deregistering event source from poller
25
registering event source with poller: token=Token(486539266), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1191182340), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadthread '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(671088642), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1207959556), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:deregistering event source from poller
25
registering event source with poller: token=Token(654311426), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(637534217), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(570425358), interests=READABLE | WRITABLE
registering event source with poller: token=Token(167772176), interests=READABLE | WRITABLE
GET /Room.js:
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Outcome: Success
   >> GET /images/User.jpg image/avif:
Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
GET /style.css text/css:
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
registering event source with poller: token=Token(587202574), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Outcome: Success
registering event source with poller: token=Token(469762063), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /images/User.jpg image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(603979790), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(184549392), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(654311433), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(637534225), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(486539279), interests=READABLE | WRITABLE
registering event source with poller: token=Token(671088649), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
GET /style.css text/css:
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(654311441), interests=READABLE | WRITABLE
registering event source with poller: token=Token(620757006), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
GET /reset.css text/css:
GET /Room.css text/css:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >>    >> Response succeeded.
Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(671088657), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(687865865), interests=READABLE | WRITABLE
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >>    >> Outcome: Success
Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >>    >>    >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(637534222), interests=READABLE | WRITABLE
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(704643081), interests=READABLE | WRITABLE
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(654311438), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326608), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
GET /reset.css text/css:
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(671088654), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Outcome: Success
registering event source with poller: token=Token(687865873), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Matched: (events) GET /message/event
Get event   >>    >> Outcome: Success
Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(218103824), interests=READABLE | WRITABLE
registering event source with poller: token=Token(687865870), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(234881040), interests=READABLE | WRITABLE
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
registering event source with poller: token=Token(721420297), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(251658256), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(704643086), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
deregistering event source from poller
deregistering event source from poller
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(738197513), interests=READABLE | WRITABLE
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(721420302), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
registering event source with poller: token=Token(268435472), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
GET /nicepage.js:
GET /jquery.js:
registering event source with poller: token=Token(939524102), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Outcome: Success
   >> GET /images/Screenshot2022-12-02202250.png image/avif:
Outcome: Success
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >>    >> Remote left: channel closed.
Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(754974729), interests=READABLE | WRITABLE
registering event source with poller: token=Token(285212688), interests=READABLE | WRITABLE
GET /script.js:
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
   >> Matched: (events) GET /message/event
   >> Outcome: Success
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /style.css text/css:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(738197518), interests=READABLE | WRITABLE
registering event source with poller: token=Token(301989904), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(754974734), interests=READABLE | WRITABLE
registering event source with poller: token=Token(771751945), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> GET /images/User.jpg image/avif:
Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(788529161), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(318767120), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
GET /style.css text/css:
GET /reset.css text/css:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(335544336), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(704643089), interests=READABLE | WRITABLE
GET /jquery.js:
GET /nicepage.js:
GET /Room.js:
GET /images/User.jpg image/avif:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Response succeeded.
Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >>    >> Outcome: Success
Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(352321552), interests=READABLE | WRITABLE
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(771751950), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
GET /playerInfo/event text/event-stream:
   >> Outcome: Success
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
GET /script.js:
registering event source with poller: token=Token(805306377), interests=READABLE | WRITABLE
GET /jquery.js:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(721420305), interests=READABLE | WRITABLE
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >>    >> Response succeeded.
   >> GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
Response succeeded.
Response succeeded.
   >>    >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(369098768), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /script.js:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
registering event source with poller: token=Token(956301318), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(503316495), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(385875984), interests=READABLE | WRITABLE
   >> Response succeeded.
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(788529166), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(520093711), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
GET /reset.css text/css:
GET /Room.css text/css:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(805306382), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(738197521), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Outcome: Success
Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(536870927), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(822083598), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(553648143), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(754974737), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Outcome: Success
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
registering event source with poller: token=Token(570425359), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(838860814), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
GET /jquery.js:
Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> GET /images/User.jpg image/avif:
Outcome: Success
   >> Response succeeded.
   >>    >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(973078534), interests=READABLE | WRITABLE
registering event source with poller: token=Token(587202575), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >>    >> Remote left: channel closed.
Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(989855750), interests=READABLE | WRITABLE
registering event source with poller: token=Token(402653200), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Matched: (events) GET /message/event
   >> Outcome: Success
   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
GET /reset.css text/css:
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(603979791), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1006632966), interests=READABLE | WRITABLE
   >> Response succeeded.
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /style.css text/css:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(855638030), interests=READABLE | WRITABLE
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1023410182), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(419430416), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
registering event source with poller: token=Token(620757007), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(822083593), interests=READABLE | WRITABLE
registering event source with poller: token=Token(436207632), interests=READABLE | WRITABLE
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(452984848), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(637534223), interests=READABLE | WRITABLE
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(771751953), interests=READABLE | WRITABLE
GET /jquery.js:
registering event source with poller: token=Token(838860809), interests=READABLE | WRITABLE
GET /nicepage.js:
   >>    >>    >> Outcome: Success
Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >>    >> Outcome: Success
Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(788529169), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "awe")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=awe&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(654311439), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1040187398), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "Hestllo")
   >> url-encoded field: ("serverip", "faowiejg")
GET /Lobby.html?username=Hestllo&serverip=faowiejg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Lobby.html?username=Hestllo&serverip=faowiejg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1056964614), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
registering event source with poller: token=Token(872415246), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "awegaweg")
   >> url-encoded field: ("serverip", "gaowiegj")
GET /Lobby.html?username=awegaweg&serverip=gaowiegj text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >> Outcome: Success
Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Lobby.html?username=awegaweg&serverip=gaowiegj text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Outcome: Success
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(805306385), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(469762064), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(855638025), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(1073741830), interests=READABLE | WRITABLE
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "weg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=weg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Lobby.html?username=weg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "awge")
GET /Lobby.html?username=aweg&serverip=awge text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(486539280), interests=READABLE | WRITABLE
GET /nicepage.js:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Lobby.html?username=aweg&serverip=awge text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(671088655), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >>    >>    >> Outcome: Success
Outcome: Success
Outcome: Success
registering event source with poller: token=Token(1090519046), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "k%3Bjbjo")
   >> url-encoded field: ("serverip", "qwedrftyugihuoijpok%27pl")
GET /Lobby.html?username=k%3Bjbjo&serverip=qwedrftyugihuoijpok%27pl text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Lobby.html?username=k%3Bjbjo&serverip=qwedrftyugihuoijpok%27pl text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(687865871), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(889192462), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "awegaweg")
GET /Lobby.html?username=aweg&serverip=awegaweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(905969678), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1107296262), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1124073478), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(503316496), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
registering event source with poller: token=Token(922746894), interests=READABLE | WRITABLE
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(872415241), interests=READABLE | WRITABLE
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "awegaw")
   >> url-encoded field: ("serverip", "egawe")
GET /Lobby.html?username=awegaw&serverip=egawe text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(889192457), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(905969673), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "awega")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=awega&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Response succeeded.
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Lobby.html?username=awega&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(922746889), interests=READABLE | WRITABLE
registering event source with poller: token=Token(939524110), interests=READABLE | WRITABLE
registering event source with poller: token=Token(704643087), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aw")
   >> url-encoded field: ("serverip", "geaweg")
GET /Lobby.html?username=aw&serverip=geaweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "qq23t")
   >> url-encoded field: ("serverip", "wqge")
GET /Lobby.html?username=qq23t&serverip=wqge text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
GET /nicepage.js:
registering event source with poller: token=Token(956301326), interests=READABLE | WRITABLE
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> GET /images/Screenshot2022-12-02202250.png image/avif:
Outcome: Success
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Lobby.html?username=qq23t&serverip=wqge text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "weg")
GET /Lobby.html?username=aweg&serverip=weg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(973078542), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
registering event source with poller: token=Token(520093712), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
registering event source with poller: token=Token(1140850694), interests=READABLE | WRITABLE
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
registering event source with poller: token=Token(1157627910), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /Room.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(536870928), interests=READABLE | WRITABLE
   >>    >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
   >> Outcome: Success
Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1224736772), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1459617799), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1241513988), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1258291204), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1811939331), interests=READABLE | WRITABLE
registering event source with poller: token=Token(520093704), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1828716547), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(419430407), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1845493763), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(503316482), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })registering event source with poller: token=Token(1862270979), interests=READABLE | WRITABLE
', thread 'src/./game/utils.rs:rocket-worker-thread24' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })25', 
src/./game/utils.rs:deregistering event source from poller
24registering event source with poller: token=Token(1879048195), interests=READABLE | WRITABLE
registering event source with poller: token=Token(687865858), interests=READABLE | WRITABLE
:deregistering event source from poller
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:deregistering event source from poller
25
registering event source with poller: token=Token(671088642), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1476395015), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1895825411), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1493172231), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1275068420), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1291845636), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(536870920), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1308622852), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(436207623), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1325400068), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(520093698), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1342177284), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(704643074), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1358954500), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(687865858), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1912602627), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1375731716), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1929379843), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1509949447), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1946157059), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(553648136), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1962934275), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(452984839), interests=READABLE | WRITABLE

deregistering event source from poller
registering event source with poller: token=Token(1979711491), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(536870914), interests=READABLE | WRITABLE
:25
deregistering event source from poller
registering event source with poller: token=Token(1996488707), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(721420290), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2013265923), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(704643074), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aw" }registering event source with poller: token=Token(1392508932), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1409286148), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aw","visible_type":"All"}
registering event source with poller: token=Token(2030043139), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2046820355), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(570425352), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2063597571), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1526726663), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })registering event source with poller: token=Token(469762055), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1543503879), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(553648130), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1560281095), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(738197506), interests=READABLE | WRITABLE
:24:25
registering event source with poller: token=Token(1577058311), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(721420290), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1174405126), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(721420303), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
   >> Remote left: channel closed.
GET /Room.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(989855758), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1426063364), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1593835527), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1442840580), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2080374787), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2097152003), interests=READABLE | WRITABLE
   >> Remote left: channel closed.
deregistering event source from poller
registering event source with poller: token=Token(587202568), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929219), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(486539271), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2130706435), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
registering event source with poller: token=Token(570425346), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(3), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25thread 'registering event source with poller: token=Token(754974722), interests=READABLE | WRITABLE

rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(16777219), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })registering event source with poller: token=Token(738197506), interests=READABLE | WRITABLE
deregistering event source from poller
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(1610612743), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1627389959), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
registering event source with poller: token=Token(33554435), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1459617796), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(50331651), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(67108867), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979784), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(503316487), interests=READABLE | WRITABLE
registering event source with poller: token=Token(83886083), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'thread 'rocket-worker-threadrocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })24', :src/./game/utils.rs25:
24:25deregistering event source from poller

registering event source with poller: token=Token(587202562), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663299), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(771751938), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(117440515), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(754974722), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(1644167175), interests=READABLE | WRITABLE
registering event source with poller: token=Token(134217731), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1660944391), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1476395012), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1677721607), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(620757000), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1694498823), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(520093703), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1711276039), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', ', src/./game/utils.rssrc/./game/utils.rs:registering event source with poller: token=Token(1728053255), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(603979778), interests=READABLE | WRITABLE
2424:25:
deregistering event source from poller
25
deregistering event source from poller
registering event source with poller: token=Token(788529154), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1744830471), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(771751938), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gaw" }registering event source with poller: token=Token(150994947), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1761607687), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gaw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gaw","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(167772163), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1493172228), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(184549379), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(637534216), interests=READABLE | WRITABLE
registering event source with poller: token=Token(201326595), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(536870919), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(218103811), interests=READABLE | WRITABLE
:25
registering event source with poller: token=Token(620756994), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(234881027), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
registering event source with poller: token=Token(805306370), interests=READABLE | WRITABLE
registering event source with poller: token=Token(251658243), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })registering event source with poller: token=Token(788529154), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(1778384903), interests=READABLE | WRITABLE
registering event source with poller: token=Token(268435459), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
Outcome: Success
registering event source with poller: token=Token(1795162119), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1509949444), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1811939335), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(654311432), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1828716551), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(553648135), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1845493767), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534210), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-threadregistering event source with poller: token=Token(1862270983), interests=READABLE | WRITABLE
' panicked at 'thread 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', rocket-worker-thread' panicked at 'src/./game/utils.rscalled `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All }):deregistering event source from poller
', src/./game/utils.rs24:registering event source with poller: token=Token(822083586), interests=READABLE | WRITABLE
:2425
:registering event source with poller: token=Token(1879048199), interests=READABLE | WRITABLE
25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })registering event source with poller: token=Token(805306370), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Lobby.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Outcome: Success
registering event source with poller: token=Token(822083601), interests=READABLE | WRITABLE
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Response succeeded.
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Room.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
registering event source with poller: token=Token(1006632974), interests=READABLE | WRITABLE
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(553648144), interests=READABLE | WRITABLE
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
   >> Matched: (events) GET /message/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aweg", message: "awe" }registering event source with poller: token=Token(285212675), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1895825415), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aweg\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aweg","message":"awe","visible_type":"All"}
registering event source with poller: token=Token(301989891), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1526726660), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(318767107), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(335544323), interests=READABLE | WRITABLE
registering event source with poller: token=Token(671088648), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(570425351), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(352321539), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(654311426), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(369098755), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(838860802), interests=READABLE | WRITABLE
registering event source with poller: token=Token(385875971), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "awe", visible_type: All })registering event source with poller: token=Token(822083586), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("message", "g")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aweg", message: "g" }registering event source with poller: token=Token(1912602631), interests=READABLE | WRITABLE
registering event source with poller: token=Token(402653187), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aweg\",\"message\":\"g\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aweg","message":"g","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1929379847), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1543503876), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1946157063), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(687865864), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1962934279), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1979711495), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "g", visible_type: All })', registering event source with poller: token=Token(587202567), interests=READABLE | WRITABLE
deregistering event source from poller
src/./game/utils.rs:24:25
registering event source with poller: token=Token(671088642), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(1996488711), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "g", visible_type: All })deregistering event source from poller
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'registering event source with poller: token=Token(855638018), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2013265927), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "g", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
deregistering event source from poller
25deregistering event source from poller
registering event source with poller: token=Token(838860802), interests=READABLE | WRITABLE

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "g", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "g", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("message", "weg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aweg", message: "weg" }registering event source with poller: token=Token(419430403), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2030043143), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aweg\",\"message\":\"weg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aweg","message":"weg","visible_type":"All"}
   >> registering event source with poller: token=Token(436207619), interests=READABLE | WRITABLE
Response succeeded.
registering event source with poller: token=Token(1560281092), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(452984835), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(704643080), interests=READABLE | WRITABLE
registering event source with poller: token=Token(469762051), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(603979783), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "weg", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(486539267), interests=READABLE | WRITABLE
25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(687865858), interests=READABLE | WRITABLE
registering event source with poller: token=Token(503316483), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "weg", visible_type: All })', registering event source with poller: token=Token(872415234), interests=READABLE | WRITABLE
src/./game/utils.rsregistering event source with poller: token=Token(520093699), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(855638018), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(838860817), interests=READABLE | WRITABLE
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("serverip", "aweg")
GET /Room.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
GET /Room.css text/css:
GET /reset.css text/css:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(1023410190), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1191182342), interests=READABLE | WRITABLE
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aweg", message: "aweg" }registering event source with poller: token=Token(2046820359), interests=READABLE | WRITABLE
registering event source with poller: token=Token(536870915), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aweg\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aweg","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(2063597575), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1577058308), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1593835524), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(721420296), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1610612740), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(620756999), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1627389956), interests=READABLE | WRITABLE
registering event source with poller: token=Token(704643074), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1644167172), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(889192450), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1660944388), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "aweg", visible_type: All })registering event source with poller: token=Token(872415234), interests=READABLE | WRITABLE
deregistering event source from poller
', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aweg")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aweg", message: "awe" }registering event source with poller: token=Token(553648131), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1677721604), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"aweg\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"aweg","message":"awe","visible_type":"All"}
deregistering event source from poller
   >> Outcome: Success
registering event source with poller: token=Token(570425347), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2080374791), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(587202563), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(738197512), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979779), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "awe", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25registering event source with poller: token=Token(620756995), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534215), interests=READABLE | WRITABLE

deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(637534211), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "awe", visible_type: All })', registering event source with poller: token=Token(721420290), interests=READABLE | WRITABLE
src/./game/utils.rsderegistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
:deregistering event source from poller
24:registering event source with poller: token=Token(905969666), interests=READABLE | WRITABLE
25
registering event source with poller: token=Token(654311427), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(889192450), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "awe", visible_type: All })', src/./game/utils.rs:thread '24rocket-worker-thread:' panicked at '25called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "aweg", message: "awe", visible_type: All })
', src/./game/utils.rs:24:25
GET /Room.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(738197519), interests=READABLE | WRITABLE
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1040187406), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(754974735), interests=READABLE | WRITABLE
GET /Room.html?username=aweg&serverip=aweg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(939524105), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1207959558), interests=READABLE | WRITABLE
registering event source with poller: token=Token(570425360), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(855638033), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1056964622), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Response succeeded.
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(771751951), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1073741838), interests=READABLE | WRITABLE
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
registering event source with poller: token=Token(788529167), interests=READABLE | WRITABLE
   >> Outcome: Success
registering event source with poller: token=Token(872415249), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.css text/css:
GET /reset.css text/css:
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(889192465), interests=READABLE | WRITABLE
GET /nicepage.js:
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
GET /Room.html? text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(1090519054), interests=READABLE | WRITABLE
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >>    >> Remote left: channel closed.
Remote left: channel closed.
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >>    >> Remote left: channel closed.
Remote left: channel closed.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "wag")
   >> url-encoded field: ("serverip", "awg")
GET /Room.html?username=wag&serverip=awg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(587202576), interests=READABLE | WRITABLE
registering event source with poller: token=Token(805306383), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296270), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301321), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1224736774), interests=READABLE | WRITABLE
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /playerInfo/event text/event-stream:
GET /message/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
   >> Matched: (events) GET /message/event
Get event   >>    >> Outcome: Success
Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
deregistering event source from poller
deregistering event source from poller
   >> Remote left: channel closed.
   >> Remote left: channel closed.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "wag")
   >> url-encoded field: ("serverip", "awg")
GET /Room.html?username=wag&serverip=awg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(822083599), interests=READABLE | WRITABLE
registering event source with poller: token=Token(603979792), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
registering event source with poller: token=Token(905969681), interests=READABLE | WRITABLE
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "wag")
   >> url-encoded field: ("message", "xfcgml%2F")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "wag", message: "xfcgml/" }registering event source with poller: token=Token(1694498820), interests=READABLE | WRITABLE
registering event source with poller: token=Token(671088643), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"wag\",\"message\":\"xfcgml/\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"wag","message":"xfcgml/","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(1711276036), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(2097152007), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1728053252), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1744830468), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1761607684), interests=READABLE | WRITABLE
registering event source with poller: token=Token(754974728), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1778384900), interests=READABLE | WRITABLE
registering event source with poller: token=Token(738197506), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1795162116), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(654311431), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "xfcgml/", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "xfcgml/", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "xfcgml/", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(922746882), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(905969666), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "xfcgml/", visible_type: All })thread '', rocket-worker-threadsrc/./game/utils.rs' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "xfcgml/", visible_type: All })24', :src/./game/utils.rs:24:25
25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "wag")
   >> url-encoded field: ("message", "l")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "wag", message: "l" }registering event source with poller: token=Token(687865859), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1811939332), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"wag\",\"message\":\"l\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"wag","message":"l","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(704643075), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929223), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(721420291), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(771751944), interests=READABLE | WRITABLE
registering event source with poller: token=Token(738197507), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(671088647), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "l", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(754974723), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(771751939), interests=READABLE | WRITABLE
registering event source with poller: token=Token(754974722), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "l", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(788529155), interests=READABLE | WRITABLE
25
deregistering event source from poller
registering event source with poller: token=Token(939524098), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(922746882), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "l", visible_type: All })', src/./game/utils.rsthread ':rocket-worker-thread24' panicked at ':deregistering event source from poller
25
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "l", visible_type: All })', src/./game/utils.rsthread ':rocket-worker-thread24' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "l", visible_type: All })25', 
src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "wag")
   >> url-encoded field: ("message", "%3B")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "wag", message: ";" }registering event source with poller: token=Token(1828716548), interests=READABLE | WRITABLE
registering event source with poller: token=Token(805306371), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"wag\",\"message\":\";\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"wag","message":";","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1845493764), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2130706439), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1862270980), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(788529160), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1879048196), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1895825412), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(687865863), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: ";", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(771751938), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1912602628), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1929379844), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'thread 'registering event source with poller: token=Token(956301314), interests=READABLE | WRITABLE
rocket-worker-threadrocket-worker-threadregistering event source with poller: token=Token(939524098), interests=READABLE | WRITABLE
' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: ";", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: ";", visible_type: All })thread '', rocket-worker-threadsrc/./game/utils.rs:24:25' panicked at '
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: ";", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: ";", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "wag")
   >> url-encoded field: ("message", "k%27")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "wag", message: "k'" }registering event source with poller: token=Token(822083587), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1946157060), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"wag\",\"message\":\"k'\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"wag","message":"k'","visible_type":"All"}
registering event source with poller: token=Token(838860803), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(855638019), interests=READABLE | WRITABLE
registering event source with poller: token=Token(7), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(872415235), interests=READABLE | WRITABLE
registering event source with poller: token=Token(805306376), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(704643079), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k'", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(889192451), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k'", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(905969667), interests=READABLE | WRITABLE
registering event source with poller: token=Token(788529154), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(973078530), interests=READABLE | WRITABLE
registering event source with poller: token=Token(922746883), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k'", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k'", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
registering event source with poller: token=Token(956301314), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k'", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "wag")
   >> url-encoded field: ("message", "k")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "wag", message: "k" }registering event source with poller: token=Token(1962934276), interests=READABLE | WRITABLE
registering event source with poller: token=Token(939524099), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"wag\",\"message\":\"k\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"wag","message":"k","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1979711492), interests=READABLE | WRITABLE
registering event source with poller: token=Token(16777223), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1996488708), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(2013265924), interests=READABLE | WRITABLE
registering event source with poller: token=Token(822083592), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(721420295), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2030043140), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2046820356), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(805306370), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(989855746), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2063597572), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'registering event source with poller: token=Token(973078530), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "wag")
   >> url-encoded field: ("message", "k")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "wag", message: "k" }registering event source with poller: token=Token(956301315), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(973078531), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"wag\",\"message\":\"k\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"wag","message":"k","visible_type":"All"}
registering event source with poller: token=Token(2080374788), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554439), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(2097152004), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(838860808), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2113929220), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(738197511), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(2130706436), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'registering event source with poller: token=Token(4), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(16777220), interests=READABLE | WRITABLE
registering event source with poller: token=Token(822083586), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1006632962), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(989855746), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "wag")
   >> url-encoded field: ("message", "k%27%3B")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "wag", message: "k';" }registering event source with poller: token=Token(989855747), interests=READABLE | WRITABLE
registering event source with poller: token=Token(33554436), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"wag\",\"message\":\"k';\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"wag","message":"k';","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1006632963), interests=READABLE | WRITABLE
registering event source with poller: token=Token(50331655), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1023410179), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(855638024), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1040187395), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(754974727), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1056964611), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k';", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
deregistering event source from poller
:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k';", visible_type: All })', src/./game/utils.rs:registering event source with poller: token=Token(1073741827), interests=READABLE | WRITABLE
24:25
registering event source with poller: token=Token(838860802), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1023410178), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1090519043), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k';", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(1006632962), interests=READABLE | WRITABLE
25thread '
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k';", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "k';", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "wag")
   >> url-encoded field: ("message", "m")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "wag", message: "m" }registering event source with poller: token=Token(50331652), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296259), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"wag\",\"message\":\"m\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"wag","message":"m","visible_type":"All"}
registering event source with poller: token=Token(67108868), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(67108871), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(83886087), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(872415240), interests=READABLE | WRITABLE
registering event source with poller: token=Token(100663303), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(117440519), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(771751943), interests=READABLE | WRITABLE
rocket-worker-threadderegistering event source from poller
registering event source with poller: token=Token(134217735), interests=READABLE | WRITABLE
deregistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "m", visible_type: All })', thread 'src/./game/utils.rsrocket-worker-thread:' panicked at '24called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "m", visible_type: All }):', 25src/./game/utils.rs
registering event source with poller: token=Token(855638018), interests=READABLE | WRITABLE
deregistering event source from poller
:24:deregistering event source from poller
25registering event source with poller: token=Token(150994951), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(1040187394), interests=READABLE | WRITABLE
rocket-worker-threadderegistering event source from poller

deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1023410178), interests=READABLE | WRITABLE
thread '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "m", visible_type: All })', src/./game/utils.rs:24:25
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "m", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "wag", message: "m", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1124073486), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
GET /Room.html?username=wag&serverip=awg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(973078537), interests=READABLE | WRITABLE
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(620757008), interests=READABLE | WRITABLE
registering event source with poller: token=Token(838860815), interests=READABLE | WRITABLE
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(922746897), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1241513990), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.js:
   >> GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1140850702), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(855638031), interests=READABLE | WRITABLE
registering event source with poller: token=Token(637534224), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(872415247), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1258291206), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(889192463), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(889192456), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969679), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(788529159), interests=READABLE | WRITABLE
registering event source with poller: token=Token(922746895), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
registering event source with poller: token=Token(939524111), interests=READABLE | WRITABLE
registering event source with poller: token=Token(872415234), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1056964610), interests=READABLE | WRITABLE
rocket-worker-threadregistering event source with poller: token=Token(956301327), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })thread '', rocket-worker-threadsrc/./game/utils.rs' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })24', :src/./game/utils.rs25deregistering event source from poller

deregistering event source from poller
:24:25
registering event source with poller: token=Token(1040187394), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(654311440), interests=READABLE | WRITABLE
registering event source with poller: token=Token(973078543), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
registering event source with poller: token=Token(1275068422), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
registering event source with poller: token=Token(671088656), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
   >> Response succeeded.
registering event source with poller: token=Token(1291845638), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(905969672), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1308622854), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(805306375), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1325400070), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1342177286), interests=READABLE | WRITABLE
registering event source with poller: token=Token(889192450), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1073741826), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1358954502), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:deregistering event source from poller
25
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1056964610), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(989855759), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1375731718), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1006632975), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(687865872), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1023410191), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(922746888), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1040187407), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:24:25
registering event source with poller: token=Token(1056964623), interests=READABLE | WRITABLE
registering event source with poller: token=Token(822083591), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1073741839), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969666), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', thread 'src/./game/utils.rs:rocket-worker-thread24:25
deregistering event source from poller
registering event source with poller: token=Token(1090519042), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1090519055), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', registering event source with poller: token=Token(1073741826), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gawe" }registering event source with poller: token=Token(1392508934), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296271), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gawe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gawe","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1409286150), interests=READABLE | WRITABLE
registering event source with poller: token=Token(704643088), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(721420304), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(738197520), interests=READABLE | WRITABLE
registering event source with poller: token=Token(939524104), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(838860807), interests=READABLE | WRITABLE
registering event source with poller: token=Token(754974736), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
registering event source with poller: token=Token(771751952), interests=READABLE | WRITABLE
registering event source with poller: token=Token(922746882), interests=READABLE | WRITABLE
deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(788529168), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1107296258), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1090519042), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gawe" }registering event source with poller: token=Token(1124073487), interests=READABLE | WRITABLE
registering event source with poller: token=Token(805306384), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gawe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gawe","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1140850703), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1426063366), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1157627919), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1174405135), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301320), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1191182351), interests=READABLE | WRITABLE
registering event source with poller: token=Token(855638023), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1207959567), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'registering event source with poller: token=Token(939524098), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
registering event source with poller: token=Token(1224736783), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'deregistering event source from poller
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24thread ':rocket-worker-thread25' panicked at '
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rs:24:25
24:25
registering event source with poller: token=Token(1124073474), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1107296258), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })', src/./game/utils.rsthread ':rocket-worker-thread24' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gawe", visible_type: All })25', 
src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gaw" }registering event source with poller: token=Token(822083600), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1241513999), interests=READABLE | WRITABLE
deregistering event source from poller
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gaw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gaw","visible_type":"All"}
   >> Outcome: Success
registering event source with poller: token=Token(838860816), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1442840582), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(855638032), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(872415248), interests=READABLE | WRITABLE
registering event source with poller: token=Token(973078536), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(889192464), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(872415239), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301314), interests=READABLE | WRITABLE
registering event source with poller: token=Token(905969680), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'registering event source with poller: token=Token(922746896), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1140850690), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1124073474), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(1258291215), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1275068431), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
registering event source with poller: token=Token(939524112), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1459617798), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(956301328), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(973078544), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855752), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(889192455), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855760), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:deregistering event source from poller
registering event source with poller: token=Token(973078530), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1006632976), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
24:25
deregistering event source from poller
registering event source with poller: token=Token(1157627906), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1023410192), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1140850690), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "weg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "weg" }registering event source with poller: token=Token(1291845647), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1040187408), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"weg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"weg","visible_type":"All"}
registering event source with poller: token=Token(1308622863), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(1325400079), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1476395014), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1006632968), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1493172230), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1509949446), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'registering event source with poller: token=Token(905969671), interests=READABLE | WRITABLE
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(989855746), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1526726662), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', deregistering event source from poller
src/./game/utils.rs:24:25
registering event source with poller: token=Token(1543503878), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1174405122), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1157627906), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "weg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1056964624), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1073741840), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
registering event source with poller: token=Token(1560281094), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1342177295), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1577058310), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1023410184), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1593835526), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(922746887), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(1610612742), interests=READABLE | WRITABLE
rocket-worker-threadderegistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1006632962), interests=READABLE | WRITABLE
' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1627389958), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', registering event source with poller: token=Token(1191182338), interests=READABLE | WRITABLE
src/./game/utils.rsregistering event source with poller: token=Token(1644167174), interests=READABLE | WRITABLE
:24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', registering event source with poller: token=Token(1174405122), interests=READABLE | WRITABLE
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aw" }registering event source with poller: token=Token(1090519056), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1107296272), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aw","visible_type":"All"}
registering event source with poller: token=Token(1660944390), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1677721606), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1694498822), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1040187400), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1358954511), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(939524103), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1375731727), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1023410178), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1392508943), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1207959554), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1409286159), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rsderegistering event source from poller
:registering event source with poller: token=Token(1191182338), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aw", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(1124073488), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1140850704), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
registering event source with poller: token=Token(1426063375), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1442840591), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1711276038), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1056964616), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1459617807), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(956301319), interests=READABLE | WRITABLE
deregistering event source from poller
:24:25
registering event source with poller: token=Token(1476395023), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1040187394), interests=READABLE | WRITABLE
:24:25
registering event source with poller: token=Token(1493172239), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1509949455), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1224736770), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1207959554), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:deregistering event source from poller
25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "aweg" }registering event source with poller: token=Token(1157627920), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1526726671), interests=READABLE | WRITABLE
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"aweg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"aweg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1174405136), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1728053254), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1191182352), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1073741832), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1207959568), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1224736784), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25registering event source with poller: token=Token(973078535), interests=READABLE | WRITABLE

deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(1056964610), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1241514000), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1241513986), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1258291216), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1224736770), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "aweg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "w")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "w" }registering event source with poller: token=Token(1543503887), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1275068432), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"w\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"w","visible_type":"All"}
registering event source with poller: token=Token(1560281103), interests=READABLE | WRITABLE
   >> Response succeeded.
deregistering event source from poller
registering event source with poller: token=Token(1577058319), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1744830470), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1090519048), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1761607686), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "w", visible_type: All })', registering event source with poller: token=Token(989855751), interests=READABLE | WRITABLE
src/./game/utils.rsregistering event source with poller: token=Token(1778384902), interests=READABLE | WRITABLE
deregistering event source from poller
:24:25
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "w", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1073741826), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1795162118), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "w", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1811939334), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1258291202), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1241513986), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "w", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "w", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "eg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "eg" }registering event source with poller: token=Token(1291845648), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1828716550), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"eg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"eg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1308622864), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1593835535), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1325400080), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1107296264), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1342177296), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })deregistering event source from poller
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1358954512), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1006632967), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1090519042), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1375731728), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1275068418), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1392508944), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1258291202), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "eg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(1845493766), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1409286160), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1862270982), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1879048198), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1610612751), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1124073480), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1627389967), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'registering event source with poller: token=Token(1023410183), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24deregistering event source from poller
:registering event source with poller: token=Token(1644167183), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at '25called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })
deregistering event source from poller
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1660944399), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1107296258), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rsregistering event source with poller: token=Token(1291845634), interests=READABLE | WRITABLE
:registering event source with poller: token=Token(1677721615), interests=READABLE | WRITABLE
24:25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1275068418), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "g")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "g" }registering event source with poller: token=Token(1426063376), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
   >> Response succeeded.
registering event source with poller: token=Token(1442840592), interests=READABLE | WRITABLE
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"g\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"g","visible_type":"All"}
registering event source with poller: token=Token(1694498831), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1711276047), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1895825414), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1728053263), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1140850696), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1040187399), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1744830479), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'deregistering event source from poller
called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1761607695), interests=READABLE | WRITABLE
thread 'rocket-worker-threadregistering event source with poller: token=Token(1124073474), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })deregistering event source from poller
', registering event source with poller: token=Token(1308622850), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1778384911), interests=READABLE | WRITABLE
src/./game/utils.rs:24:deregistering event source from poller
25
thread 'deregistering event source from poller
rocket-worker-threadderegistering event source from poller
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })deregistering event source from poller
', src/./game/utils.rsthread ':rocket-worker-thread24' panicked at ':called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })25registering event source with poller: token=Token(1291845634), interests=READABLE | WRITABLE
', 
src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "g", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "wg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "wg" }registering event source with poller: token=Token(1459617808), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1795162127), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"wg\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"wg","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(1476395024), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1912602630), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1929379846), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1157627912), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1946157062), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "wg", visible_type: All })', registering event source with poller: token=Token(1056964615), interests=READABLE | WRITABLE
src/./game/utils.rs:24:registering event source with poller: token=Token(1962934278), interests=READABLE | WRITABLE
25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "wg", visible_type: All })registering event source with poller: token=Token(1140850690), interests=READABLE | WRITABLE
', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1979711494), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "wg", visible_type: All })', src/./game/utils.rs:24:25deregistering event source from poller

registering event source with poller: token=Token(1325400066), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1996488710), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-threadregistering event source with poller: token=Token(1308622850), interests=READABLE | WRITABLE
' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "wg", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "wg", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "awe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "awe" }registering event source with poller: token=Token(1811939343), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2013265926), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"awe\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"awe","visible_type":"All"}
registering event source with poller: token=Token(1828716559), interests=READABLE | WRITABLE
   >> Response succeeded.
registering event source with poller: token=Token(1493172240), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1845493775), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1174405128), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1862270991), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1073741831), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24registering event source with poller: token=Token(1879048207), interests=READABLE | WRITABLE
:25
deregistering event source from poller
deregistering event source from poller
thread 'registering event source with poller: token=Token(1895825423), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1157627906), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:registering event source with poller: token=Token(1342177282), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1912602639), interests=READABLE | WRITABLE
25
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
registering event source with poller: token=Token(1325400066), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "awe", visible_type: All })', src/./game/utils.rs:24:25
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "guest")
   >> url-encoded field: ("message", "gaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "guest", message: "gaw" }registering event source with poller: token=Token(2030043142), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1929379855), interests=READABLE | WRITABLE
deregistering event source from poller
   >> Outcome: Success
Get results:("MSG", "{\"room_name\":\"rustkill\",\"username\":\"guest\",\"message\":\"gaw\",\"visible_type\":\"All\"}"){"room_name":"rustkill","username":"guest","message":"gaw","visible_type":"All"}
   >> Response succeeded.
registering event source with poller: token=Token(2046820358), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(1509949456), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2063597574), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1191182344), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2080374790), interests=READABLE | WRITABLE
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1090519047), interests=READABLE | WRITABLE
thread 'registering event source with poller: token=Token(2097152006), interests=READABLE | WRITABLE
rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1174405122), interests=READABLE | WRITABLE
thread 'src/./game/utils.rsregistering event source with poller: token=Token(2113929222), interests=READABLE | WRITABLE
:rocket-worker-thread24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', ', src/./game/utils.rssrc/./game/utils.rs::deregistering event source from poller
2424::25
registering event source with poller: token=Token(1358954498), interests=READABLE | WRITABLE
25registering event source with poller: token=Token(2130706438), interests=READABLE | WRITABLE

deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1342177282), interests=READABLE | WRITABLE
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: SendError(Message { room_name: "rustkill", username: "guest", message: "gaw", visible_type: All })', src/./game/utils.rs:24:25
deregistering event source from poller
registering event source with poller: token=Token(1157627918), interests=READABLE | WRITABLE
GET /Room.html?username=wag&serverip=awg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(939524113), interests=READABLE | WRITABLE
registering event source with poller: token=Token(989855753), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1946157071), interests=READABLE | WRITABLE
GET /reset.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /style.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /Room.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /script.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(6), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1526726672), interests=READABLE | WRITABLE
GET /jquery.js:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Remote left: channel closed.
   >> Remote left: channel closed.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1543503888), interests=READABLE | WRITABLE
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1174405134), interests=READABLE | WRITABLE
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1962934287), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(16777222), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1006632969), interests=READABLE | WRITABLE
registering event source with poller: token=Token(956301329), interests=READABLE | WRITABLE
GET /jquery.js:
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> url-encoded field: ("username", "ygihujoi")
   >> url-encoded field: ("serverip", "hjnm")
GET /Lobby.html?username=ygihujoi&serverip=hjnm text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
registering event source with poller: token=Token(1023410185), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1979711503), interests=READABLE | WRITABLE
GET /Lobby.html?username=ygihujoi&serverip=hjnm text/html:
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (post_player_info) POST /playerInfo
   >> Outcome: Success
   >> url-encoded field: ("username", "ygihujoi")
   >> url-encoded field: ("serverip", "hjnm")
   >> Response succeeded.
deregistering event source from poller
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1996488719), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(33554438), interests=READABLE | WRITABLE
   >> Outcome: Success
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Outcome: Success
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
GET /clientInfo text/event-stream:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Room.html?username=aw+e+g&serverip=waeg text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
POST /playerInfo application/x-www-form-urlencoded:
   >> Matched: (post_player_info) POST /playerInfo
   >> Response was `None`.
   >> Outcome: Forward
   >> No matching routes for GET /clientInfo text/event-stream.
   >> No 404 catcher registered. Using Rocket default.
   >> Response succeeded.
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("serverip", "waeg")
   >> Response succeeded.
deregistering event source from poller
GET /Room.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
registering event source with poller: token=Token(1040187401), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1191182350), interests=READABLE | WRITABLE
registering event source with poller: token=Token(973078545), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1560281104), interests=READABLE | WRITABLE
   >> Outcome: Success
   >> Outcome: Success
GET /Room.js:
GET /script.js:
GET /reset.css text/css:
GET /style.css text/css:
   >>    >> Matched: (FileServer: static) GET /<path..> [10]
   >> Response succeeded.
Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
Outcome: Success
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /images/User.jpg image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
   >> Response succeeded.
GET /message/event text/event-stream:
   >> Matched: (events) GET /message/event
   >> Outcome: Success
GET /playerInfo/event text/event-stream:
   >> Matched: (event_player_info) GET /playerInfo/event
Get event   >> Outcome: Success
   >> Outcome: Success
   >> Remote left: client disconnect before response started.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("message", "awg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "awg" }registering event source with poller: token=Token(1124073475), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("message", "awgawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "awgawe" }registering event source with poller: token=Token(167772167), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("message", "awgawegawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "awgawegawe" }registering event source with poller: token=Token(83886084), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("message", "awgawegawega")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "awgawegawega" }registering event source with poller: token=Token(553648128), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("message", "awgawegawegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "awgawegawegaweg" }registering event source with poller: token=Token(1140850691), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("message", "awgawegawegawegaw")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "awgawegawegawegaw" }registering event source with poller: token=Token(184549383), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("message", "awgawegawegawegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "awgawegawegawegaweg" }registering event source with poller: token=Token(100663300), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("message", "weg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "weg" }registering event source with poller: token=Token(570425344), interests=READABLE | WRITABLE
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
GET /Lobby.html text/html:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("message", "wegawegawe")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "wegawegawe" }registering event source with poller: token=Token(1157627907), interests=READABLE | WRITABLE
deregistering event source from poller
registering event source with poller: token=Token(989855761), interests=READABLE | WRITABLE
deregistering event source from poller
POST /room/message application/x-www-form-urlencoded:
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
deregistering event source from poller
   >> url-encoded field: ("message", "aweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "aweg" }registering event source with poller: token=Token(2013265935), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1207959566), interests=READABLE | WRITABLE
POST /room/message application/x-www-form-urlencoded:
deregistering event source from poller
deregistering event source from poller
   >> Matched: (post_message) POST /room/message
   >> url-encoded field: ("room_name", "rustkill")
   >> url-encoded field: ("username", "aw+e+g")
   >> url-encoded field: ("message", "awegaweg")
   >> url-encoded field: ("visible_type", "All")
Howdy World
MessageEvent { room_name: "rustkill", username: "aw e g", message: "awegaweg" }registering event source with poller: token=Token(1577058320), interests=READABLE | WRITABLE
registering event source with poller: token=Token(2030043151), interests=READABLE | WRITABLE
registering event source with poller: token=Token(1006632977), interests=READABLE | WRITABLE
GET /nicepage.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
GET /Lobby.css text/css:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Outcome: Success
   >> Response succeeded.
GET /Lobby.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
registering event source with poller: token=Token(1056964617), interests=READABLE | WRITABLE
GET /jquery.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
   >> Response succeeded.
GET /nicepage.js:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
GET /images/Screenshot2022-12-02202250.png image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Response succeeded.
   >> Remote left: client disconnect before response started.
GET /images/flat-design-werewolf-moon-background_52683-95044-1.webp image/avif:
   >> Matched: (FileServer: static) GET /<path..> [10]
   >> Outcome: Success
   >> Response succeeded.
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
deregistering event source from poller
thread 'rocket-worker-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 61, kind: ConnectionRefused, message: "Connection refused" }', src/client.rs:76:53
   >> Handler post_message panicked.
   >> This is an application bug.
   >> A panic in Rust must be treated as an exceptional event.
   >> Panicking is not a suitable error handling mechanism.
   >> Unwinding, the result of a panic, is an expensive operation.
   >> Panics will degrade application performance.
   >> Instead of panicking, return `Option` and/or `Result`.
   >> Values of either type can be returned directly from handlers.
   >> A panic is treated as an internal server error.
   >> Outcome: Failure
   >> No 500 catcher registered. Using Rocket default.
   >> Remote left: client disconnect before response started.
   >> Remote left: channel closed.
   >> Remote left: channel closed.
